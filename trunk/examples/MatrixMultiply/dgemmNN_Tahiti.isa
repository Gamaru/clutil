ShaderType = IL_SHADER_COMPUTE
TargetChip = t
; ------------- SC_SRCSHADER Dump ------------------
SC_SHADERSTATE: u32NumIntVSConst = 0
SC_SHADERSTATE: u32NumIntPSConst = 0
SC_SHADERSTATE: u32NumIntGSConst = 0
SC_SHADERSTATE: u32NumBoolVSConst = 0
SC_SHADERSTATE: u32NumBoolPSConst = 0
SC_SHADERSTATE: u32NumBoolGSConst = 0
SC_SHADERSTATE: u32NumFloatVSConst = 0
SC_SHADERSTATE: u32NumFloatPSConst = 0
SC_SHADERSTATE: u32NumFloatGSConst = 0
fConstantsAvailable = 1
iConstantsAvailable = 1
bConstantsAvailable = 1
u32SCOptions[0] = 0x01A00000 SCOption_IGNORE_SAMPLE_L_BUG SCOption_FLOAT_DO_NOT_DIST SCOption_FLOAT_DO_NOT_REASSOC
u32SCOptions[1] = 0x00000000
u32SCOptions[2] = 0x20800001 SCOption_R800_UAV_NONARRAY_FIXUP SCOption_R1000_BYTE_SHORT_WRITE_WORKAROUND_BUG317611 SCOption_R1000_READLANE_SMRD_WORKAROUND_BUG343479
; -------- Disassembly --------------------
shader main
  asic(SI_ASIC)
  type(CS)

  s_mov_b32     m0, 0x00008000                              // 00000000: BEFC03FF 00008000
  s_buffer_load_dwordx2  s[0:1], s[4:7], 0x1c               // 00000008: C240051C
  s_buffer_load_dword  s4, s[8:11], 0x00                    // 0000000C: C2020900
  s_buffer_load_dword  s5, s[8:11], 0x04                    // 00000010: C2028904
  s_buffer_load_dword  s6, s[8:11], 0x08                    // 00000014: C2030908
  s_buffer_load_dwordx2  s[14:15], s[8:11], 0x0c            // 00000018: C247090C
  s_buffer_load_dword  s7, s[8:11], 0x10                    // 0000001C: C2038910
  s_buffer_load_dword  s16, s[8:11], 0x14                   // 00000020: C2080914
  s_buffer_load_dword  s17, s[8:11], 0x18                   // 00000024: C2088918
  s_waitcnt     lgkmcnt(0)                                  // 00000028: BF8C007F
  s_add_i32     s0, s12, s0                                 // 0000002C: 8100000C
  s_add_i32     s1, s13, s1                                 // 00000030: 8101010D
  s_lshl_b32    s1, s1, 6                                   // 00000034: 8F018601
  s_lshl_b32    s0, s0, 6                                   // 00000038: 8F008600
  s_buffer_load_dword  s12, s[8:11], 0x1c                   // 0000003C: C206091C
  s_buffer_load_dwordx2  s[18:19], s[8:11], 0x20            // 00000040: C2490920
  s_buffer_load_dword  s13, s[8:11], 0x24                   // 00000044: C2068924
  s_buffer_load_dword  s8, s[8:11], 0x28                    // 00000048: C2040928
  s_cmp_ge_i32  s6, 1                                       // 0000004C: BF038106
  s_cbranch_scc0  label_013E                                // 00000050: BF840129
  v_mul_lo_i32  v2, v1, s16                                 // 00000054: D2D60002 02002101
  v_add_i32     v2, vcc, v0, v2                             // 0000005C: 4A040500
  v_add_i32     v2, vcc, s0, v2                             // 00000060: 4A040400
  v_lshlrev_b32  v2, 3, v2                                  // 00000064: 34040483
  v_add_i32     v2, vcc, s7, v2                             // 00000068: 4A040407
  v_add_i32     v42, vcc, 0x00000100, v2                    // 0000006C: 4A5404FF 00000100
  s_lshl_b32    s7, s16, 7                                  // 00000074: 8F078710
  v_lshlrev_b32  v3, 3, v0                                  // 00000078: 34060083
  s_movk_i32    s9, 0x0041                                  // 0000007C: B0090041
  v_mul_lo_i32  v4, v1, s9                                  // 00000080: D2D60004 02001301
  v_add_i32     v4, vcc, v0, v4                             // 00000088: 4A080900
  v_mul_lo_i32  v5, v0, 17                                  // 0000008C: D2D60005 02012300
  v_add_i32     v5, vcc, v1, v5                             // 00000094: 4A0A0B01
  s_movk_i32    s9, 0x0088                                  // 00000098: B0090088
  v_mul_lo_i32  v6, v1, s9                                  // 0000009C: D2D60006 02001301
  v_add_i32     v7, vcc, s1, v0                             // 000000A4: 4A0E0001
  s_waitcnt     lgkmcnt(0)                                  // 000000A8: BF8C007F
  v_mul_lo_i32  v8, s12, v7                                 // 000000AC: D2D60008 02020E0C
  v_add_i32     v8, vcc, v1, v8                             // 000000B4: 4A101101
  v_lshlrev_b32  v8, 3, v8                                  // 000000B8: 34101083
  v_add_i32     v9, vcc, 16, v7                             // 000000BC: 4A120E90
  v_mul_lo_i32  v9, s12, v9                                 // 000000C0: D2D60009 0202120C
  v_add_i32     v9, vcc, v1, v9                             // 000000C8: 4A121301
  v_lshlrev_b32  v9, 3, v9                                  // 000000CC: 34121283
  v_add_i32     v10, vcc, 32, v7                            // 000000D0: 4A140EA0
  v_mul_lo_i32  v10, s12, v10                               // 000000D4: D2D6000A 0202140C
  v_add_i32     v10, vcc, v1, v10                           // 000000DC: 4A141501
  v_lshlrev_b32  v10, 3, v10                                // 000000E0: 34141483
  v_add_i32     v7, vcc, 48, v7                             // 000000E4: 4A0E0EB0
  v_mul_lo_i32  v7, s12, v7                                 // 000000E8: D2D60007 02020E0C
  v_add_i32     v7, vcc, v1, v7                             // 000000F0: 4A0E0F01
  v_lshlrev_b32  v7, 3, v7                                  // 000000F4: 340E0E83
  s_load_dwordx4  s[20:23], s[2:3], 0x48                    // 000000F8: C08A0348
  s_load_dwordx4  s[24:27], s[2:3], 0x50                    // 000000FC: C08C0350
  s_movk_i32    s9, 0x0000                                  // 00000100: B0090000
  v_mov_b32     v70, 0                                      // 00000104: 7E8C0280
  v_mov_b32     v71, 0                                      // 00000108: 7E8E0280
  v_mov_b32     v74, 0                                      // 0000010C: 7E940280
  v_mov_b32     v75, 0                                      // 00000110: 7E960280
  v_mov_b32     v76, 0                                      // 00000114: 7E980280
  v_mov_b32     v77, 0                                      // 00000118: 7E9A0280
  v_mov_b32     v78, 0                                      // 0000011C: 7E9C0280
  v_mov_b32     v79, 0                                      // 00000120: 7E9E0280
  v_mov_b32     v80, 0                                      // 00000124: 7EA00280
  v_mov_b32     v81, 0                                      // 00000128: 7EA20280
  v_mov_b32     v19, 0                                      // 0000012C: 7E260280
  v_mov_b32     v20, 0                                      // 00000130: 7E280280
  v_mov_b32     v21, 0                                      // 00000134: 7E2A0280
  v_mov_b32     v22, 0                                      // 00000138: 7E2C0280
  v_mov_b32     v23, 0                                      // 0000013C: 7E2E0280
  v_mov_b32     v24, 0                                      // 00000140: 7E300280
  v_mov_b32     v25, 0                                      // 00000144: 7E320280
  v_mov_b32     v26, 0                                      // 00000148: 7E340280
  v_mov_b32     v27, 0                                      // 0000014C: 7E360280
  v_mov_b32     v28, 0                                      // 00000150: 7E380280
  v_mov_b32     v29, 0                                      // 00000154: 7E3A0280
  v_mov_b32     v30, 0                                      // 00000158: 7E3C0280
  v_mov_b32     v31, 0                                      // 0000015C: 7E3E0280
  v_mov_b32     v32, 0                                      // 00000160: 7E400280
  v_mov_b32     v34, 0                                      // 00000164: 7E440280
  v_mov_b32     v35, 0                                      // 00000168: 7E460280
  v_mov_b32     v36, 0                                      // 0000016C: 7E480280
  v_mov_b32     v37, 0                                      // 00000170: 7E4A0280
  v_mov_b32     v38, 0                                      // 00000174: 7E4C0280
  v_mov_b32     v39, 0                                      // 00000178: 7E4E0280
  v_mov_b32     v40, 0                                      // 0000017C: 7E500280
  v_mov_b32     v41, 0                                      // 00000180: 7E520280
label_0061:
  s_waitcnt     0x0000                                      // 00000184: BF8C0000
  v_lshlrev_b32  v43, 3, v4                                 // 00000188: 34560883
  v_add_i32     v44, vcc, 0xffffff00, v42                   // 0000018C: 4A5854FF FFFFFF00
  v_lshlrev_b32  v45, 3, v5                                 // 00000194: 345A0A83
  s_lshl_b32    s10, s9, 3                                  // 00000198: 8F0A8309
  s_add_i32     s11, s17, s10                               // 0000019C: 810B0A11
  v_add_i32     v46, vcc, s11, v8                           // 000001A0: 4A5C100B
  tbuffer_load_format_xy  v[47:48], v44, s[20:23], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 000001A4: EBD91000 80052F2C
  tbuffer_load_format_xy  v[49:50], v46, s[24:27], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 000001AC: EBD91000 8006312E
  tbuffer_load_format_xy  v[51:52], v42, s[20:23], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 000001B4: EBD91000 8005332A
  tbuffer_load_format_xy  v[53:54], v42, s[20:23], 0 offen offset:128 format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 000001BC: EBD91080 8005352A
  s_waitcnt     vmcnt(3)                                    // 000001C4: BF8C1F73
  ds_write2_b32  v43, v47, v48 offset1:1                    // 000001C8: D8380100 00302F2B
  v_add_i32     v44, vcc, 0x00002080, v45                   // 000001D0: 4A585AFF 00002080
  s_waitcnt     vmcnt(2)                                    // 000001D8: BF8C1F72
  ds_write2_b32  v44, v49, v50 offset1:1                    // 000001DC: D8380100 0032312C
  v_add_i32     v44, vcc, 0xffffff80, v42                   // 000001E4: 4A5854FF FFFFFF80
  s_add_i32     s11, s17, s10                               // 000001EC: 810B0A11
  v_add_i32     v46, vcc, s11, v9                           // 000001F0: 4A5C120B
  v_add_i32     v47, vcc, 0x00002900, v45                   // 000001F4: 4A5E5AFF 00002900
  s_add_i32     s11, s17, s10                               // 000001FC: 810B0A11
  v_add_i32     v48, vcc, s11, v10                          // 00000200: 4A60140B
  v_add_i32     v49, vcc, 0x00003180, v45                   // 00000204: 4A625AFF 00003180
  s_add_i32     s10, s17, s10                               // 0000020C: 810A0A11
  v_add_i32     v50, vcc, s10, v7                           // 00000210: 4A640E0A
  tbuffer_load_format_xy  v[55:56], v44, s[20:23], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 00000214: EBD91000 8005372C
  tbuffer_load_format_xy  v[57:58], v46, s[24:27], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 0000021C: EBD91000 8006392E
  tbuffer_load_format_xy  v[59:60], v48, s[24:27], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 00000224: EBD91000 80063B30
  tbuffer_load_format_xy  v[61:62], v50, s[24:27], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 0000022C: EBD91000 80063D32
  s_waitcnt     vmcnt(3)                                    // 00000234: BF8C1F73
  ds_write2_b32  v43, v55, v56 offset0:32 offset1:33        // 00000238: D8382120 0038372B
  s_waitcnt     vmcnt(2)                                    // 00000240: BF8C1F72
  ds_write2_b32  v47, v57, v58 offset1:1                    // 00000244: D8380100 003A392F
  ds_write2_b32  v43, v51, v52 offset0:64 offset1:65        // 0000024C: D8384140 0034332B
  s_waitcnt     vmcnt(1)                                    // 00000254: BF8C1F71
  ds_write2_b32  v49, v59, v60 offset1:1                    // 00000258: D8380100 003C3B31
  ds_write2_b32  v43, v53, v54 offset0:96 offset1:97        // 00000260: D8386160 0036352B
  v_add_i32     v43, vcc, 0x00003a00, v45                   // 00000268: 4A565AFF 00003A00
  s_waitcnt     vmcnt(0)                                    // 00000270: BF8C1F70
  ds_write2_b32  v43, v61, v62 offset1:1                    // 00000274: D8380100 003E3D2B
  s_waitcnt     lgkmcnt(0)                                  // 0000027C: BF8C007F
  s_barrier                                                 // 00000280: BF8A0000
  s_movk_i32    s10, 0x0000                                 // 00000284: B00A0000
  s_movk_i32    s11, 0x0000                                 // 00000288: B00B0000
label_00A3:
  s_waitcnt     0x0000                                      // 0000028C: BF8C0000
  s_lshl_b32    s12, s10, 3                                 // 00000290: 8F0C830A
  v_add_i32     v43, vcc, s12, v6                           // 00000294: 4A560C0C
  v_add_i32     v44, vcc, 0x00003a00, v43                   // 00000298: 4A5856FF 00003A00
  s_lshl_b32    s12, s11, 3                                 // 000002A0: 8F0C830B
  v_add_i32     v45, vcc, s12, v3                           // 000002A4: 4A5A060C
  ds_read2_b32  v[46:47], v44 offset1:1                     // 000002A8: D8DC0100 2E00002C
  ds_read2_b32  v[48:49], v45 offset1:1                     // 000002B0: D8DC0100 3000002D
  ds_read2_b32  v[50:51], v44 offset0:2 offset1:3           // 000002B8: D8DC0302 3200002C
  ds_read2_b32  v[52:53], v45 offset0:130 offset1:131       // 000002C0: D8DC8382 3400002D
  ds_read2_b32  v[72:73], v45 offset0:96 offset1:97         // 000002C8: D8DC6160 4800002D
  ds_read2_b32  v[54:55], v45 offset0:226 offset1:227       // 000002D0: D8DCE3E2 3600002D
  s_waitcnt     lgkmcnt(4)                                  // 000002D8: BF8C047F
  v_fma_f64     v[34:35], v[48:49], v[46:47], v[34:35]      // 000002DC: D2980022 048A5D30
  ds_read2_b32  v[56:57], v45 offset0:64 offset1:65         // 000002E4: D8DC4140 3800002D
  s_waitcnt     lgkmcnt(3)                                  // 000002EC: BF8C037F
  v_fma_f64     v[34:35], v[52:53], v[50:51], v[34:35]      // 000002F0: D2980022 048A6534
  v_add_i32     v44, vcc, 0x00003180, v43                   // 000002F8: 4A5856FF 00003180
  ds_read2_b32  v[60:61], v44 offset1:1                     // 00000300: D8DC0100 3C00002C
  ds_read2_b32  v[62:63], v44 offset0:2 offset1:3           // 00000308: D8DC0302 3E00002C
  s_waitcnt     lgkmcnt(1)                                  // 00000310: BF8C017F
  v_fma_f64     v[36:37], v[48:49], v[60:61], v[36:37]      // 00000314: D2980024 04927930
  s_waitcnt     lgkmcnt(0)                                  // 0000031C: BF8C007F
  v_fma_f64     v[36:37], v[52:53], v[62:63], v[36:37]      // 00000320: D2980024 04927D34
  v_add_i32     v44, vcc, 0x00002900, v43                   // 00000328: 4A5856FF 00002900
  ds_read2_b32  v[64:65], v44 offset1:1                     // 00000330: D8DC0100 4000002C
  ds_read2_b32  v[66:67], v44 offset0:2 offset1:3           // 00000338: D8DC0302 4200002C
  s_waitcnt     lgkmcnt(1)                                  // 00000340: BF8C017F
  v_fma_f64     v[38:39], v[48:49], v[64:65], v[38:39]      // 00000344: D2980026 049A8130
  s_waitcnt     lgkmcnt(0)                                  // 0000034C: BF8C007F
  v_fma_f64     v[38:39], v[52:53], v[66:67], v[38:39]      // 00000350: D2980026 049A8534
  v_add_i32     v43, vcc, 0x00002080, v43                   // 00000358: 4A5656FF 00002080
  ds_read2_b32  v[68:69], v43 offset1:1                     // 00000360: D8DC0100 4400002B
  ds_read2_b32  v[43:44], v43 offset0:2 offset1:3           // 00000368: D8DC0302 2B00002B
  s_waitcnt     lgkmcnt(1)                                  // 00000370: BF8C017F
  v_fma_f64     v[40:41], v[48:49], v[68:69], v[40:41]      // 00000374: D2980028 04A28930
  s_waitcnt     lgkmcnt(0)                                  // 0000037C: BF8C007F
  v_fma_f64     v[40:41], v[52:53], v[43:44], v[40:41]      // 00000380: D2980028 04A25734
  v_fma_f64     v[52:53], v[72:73], v[46:47], v[70:71]      // 00000388: D2980034 051A5D48
  v_fma_f64     v[70:71], v[54:55], v[50:51], v[52:53]      // 00000390: D2980046 04D26536
  v_fma_f64     v[11:12], v[72:73], v[60:61], v[74:75]      // 00000398: D298000B 052A7948
  v_fma_f64     v[74:75], v[54:55], v[62:63], v[11:12]      // 000003A0: D298004A 042E7D36
  v_fma_f64     v[13:14], v[72:73], v[64:65], v[76:77]      // 000003A8: D298000D 05328148
  v_fma_f64     v[76:77], v[54:55], v[66:67], v[13:14]      // 000003B0: D298004C 04368536
  v_fma_f64     v[15:16], v[72:73], v[68:69], v[78:79]      // 000003B8: D298000F 053A8948
  v_fma_f64     v[78:79], v[54:55], v[43:44], v[15:16]      // 000003C0: D298004E 043E5736
  v_fma_f64     v[17:18], v[56:57], v[46:47], v[80:81]      // 000003C8: D2980011 05425D38
  v_fma_f64     v[19:20], v[56:57], v[60:61], v[19:20]      // 000003D0: D2980013 044E7938
  v_fma_f64     v[21:22], v[56:57], v[64:65], v[21:22]      // 000003D8: D2980015 04568138
  v_fma_f64     v[23:24], v[56:57], v[68:69], v[23:24]      // 000003E0: D2980017 045E8938
  s_add_i32     s12, s10, 2                                 // 000003E8: 810C820A
  s_addk_i32    s11, 0x0082                                 // 000003EC: B78B0082
  ds_read2_b32  v[48:49], v45 offset0:194 offset1:195       // 000003F0: D8DCC3C2 3000002D
  ds_read2_b32  v[52:53], v45 offset0:32 offset1:33         // 000003F8: D8DC2120 3400002D
  ds_read2_b32  v[54:55], v45 offset0:162 offset1:163       // 00000400: D8DCA3A2 3600002D
  s_waitcnt     lgkmcnt(2)                                  // 00000408: BF8C027F
  v_fma_f64     v[80:81], v[48:49], v[50:51], v[17:18]      // 0000040C: D2980050 04466530
  v_fma_f64     v[19:20], v[48:49], v[62:63], v[19:20]      // 00000414: D2980013 044E7D30
  v_fma_f64     v[21:22], v[48:49], v[66:67], v[21:22]      // 0000041C: D2980015 04568530
  v_fma_f64     v[23:24], v[48:49], v[43:44], v[23:24]      // 00000424: D2980017 045E5730
  s_waitcnt     lgkmcnt(1)                                  // 0000042C: BF8C017F
  v_fma_f64     v[25:26], v[52:53], v[46:47], v[25:26]      // 00000430: D2980019 04665D34
  s_waitcnt     lgkmcnt(0)                                  // 00000438: BF8C007F
  v_fma_f64     v[25:26], v[54:55], v[50:51], v[25:26]      // 0000043C: D2980019 04666536
  v_fma_f64     v[27:28], v[52:53], v[60:61], v[27:28]      // 00000444: D298001B 046E7934
  v_fma_f64     v[27:28], v[54:55], v[62:63], v[27:28]      // 0000044C: D298001B 046E7D36
  v_fma_f64     v[29:30], v[52:53], v[64:65], v[29:30]      // 00000454: D298001D 04768134
  v_fma_f64     v[29:30], v[54:55], v[66:67], v[29:30]      // 0000045C: D298001D 04768536
  v_fma_f64     v[31:32], v[52:53], v[68:69], v[31:32]      // 00000464: D298001F 047E8934
  v_fma_f64     v[31:32], v[54:55], v[43:44], v[31:32]      // 0000046C: D298001F 047E5736
  s_cmp_eq_i32  s10, 14                                     // 00000474: BF008E0A
  s_cbranch_scc0  label_0120                                // 00000478: BF840001
  s_branch      label_0122                                  // 0000047C: BF820002
label_0120:
  s_mov_b32     s10, s12                                    // 00000480: BE8A030C
  s_branch      label_00A3                                  // 00000484: BF82FF81
label_0122:
  v_add_i32     v42, vcc, s7, v42                           // 00000488: 4A545407
  s_addk_i32    s9, 0x0010                                  // 0000048C: B7890010
  s_barrier                                                 // 00000490: BF8A0000
  s_cmp_le_i32  s6, s9                                      // 00000494: BF050906
  s_cbranch_scc0  label_0061                                // 00000498: BF84FF3A
  s_branch      label_0129                                  // 0000049C: BF820001
  s_branch      label_0061                                  // 000004A0: BF82FF38
label_0129:
  v_mov_b32     v12, v19                                    // 000004A4: 7E180313
  v_mov_b32     v13, v20                                    // 000004A8: 7E1A0314
  v_mov_b32     v14, v21                                    // 000004AC: 7E1C0315
  v_mov_b32     v15, v22                                    // 000004B0: 7E1E0316
  v_mov_b32     v16, v23                                    // 000004B4: 7E200317
  v_mov_b32     v17, v24                                    // 000004B8: 7E220318
  v_mov_b32     v18, v25                                    // 000004BC: 7E240319
  v_mov_b32     v19, v26                                    // 000004C0: 7E26031A
  v_mov_b32     v20, v27                                    // 000004C4: 7E28031B
  v_mov_b32     v21, v28                                    // 000004C8: 7E2A031C
  v_mov_b32     v22, v29                                    // 000004CC: 7E2C031D
  v_mov_b32     v23, v30                                    // 000004D0: 7E2E031E
  v_mov_b32     v24, v31                                    // 000004D4: 7E30031F
  v_mov_b32     v25, v32                                    // 000004D8: 7E320320
  v_mov_b32     v26, v34                                    // 000004DC: 7E340322
  v_mov_b32     v27, v35                                    // 000004E0: 7E360323
  v_mov_b32     v28, v36                                    // 000004E4: 7E380324
  v_mov_b32     v29, v37                                    // 000004E8: 7E3A0325
  v_mov_b32     v30, v38                                    // 000004EC: 7E3C0326
  v_mov_b32     v31, v39                                    // 000004F0: 7E3E0327
  s_branch      label_015E                                  // 000004F4: BF820020
label_013E:
  v_mov_b32     v70, 0                                      // 000004F8: 7E8C0280
  v_mov_b32     v71, 0                                      // 000004FC: 7E8E0280
  v_mov_b32     v74, 0                                      // 00000500: 7E940280
  v_mov_b32     v75, 0                                      // 00000504: 7E960280
  v_mov_b32     v76, 0                                      // 00000508: 7E980280
  v_mov_b32     v77, 0                                      // 0000050C: 7E9A0280
  v_mov_b32     v78, 0                                      // 00000510: 7E9C0280
  v_mov_b32     v79, 0                                      // 00000514: 7E9E0280
  v_mov_b32     v80, 0                                      // 00000518: 7EA00280
  v_mov_b32     v81, 0                                      // 0000051C: 7EA20280
  v_mov_b32     v12, 0                                      // 00000520: 7E180280
  v_mov_b32     v13, 0                                      // 00000524: 7E1A0280
  v_mov_b32     v14, 0                                      // 00000528: 7E1C0280
  v_mov_b32     v15, 0                                      // 0000052C: 7E1E0280
  v_mov_b32     v16, 0                                      // 00000530: 7E200280
  v_mov_b32     v17, 0                                      // 00000534: 7E220280
  v_mov_b32     v18, 0                                      // 00000538: 7E240280
  v_mov_b32     v19, 0                                      // 0000053C: 7E260280
  v_mov_b32     v20, 0                                      // 00000540: 7E280280
  v_mov_b32     v21, 0                                      // 00000544: 7E2A0280
  v_mov_b32     v22, 0                                      // 00000548: 7E2C0280
  v_mov_b32     v23, 0                                      // 0000054C: 7E2E0280
  v_mov_b32     v24, 0                                      // 00000550: 7E300280
  v_mov_b32     v25, 0                                      // 00000554: 7E320280
  v_mov_b32     v26, 0                                      // 00000558: 7E340280
  v_mov_b32     v27, 0                                      // 0000055C: 7E360280
  v_mov_b32     v28, 0                                      // 00000560: 7E380280
  v_mov_b32     v29, 0                                      // 00000564: 7E3A0280
  v_mov_b32     v30, 0                                      // 00000568: 7E3C0280
  v_mov_b32     v31, 0                                      // 0000056C: 7E3E0280
  v_mov_b32     v40, 0                                      // 00000570: 7E500280
  v_mov_b32     v41, 0                                      // 00000574: 7E520280
label_015E:
  s_or_b32      s6, s0, 63                                  // 00000578: 8806BF00
  s_cmp_gt_i32  s5, s6                                      // 0000057C: BF020605
  s_cbranch_scc0  label_0263                                // 00000580: BF840102
  s_or_b32      s5, s1, 63                                  // 00000584: 8805BF01
  s_cmp_gt_i32  s4, s5                                      // 00000588: BF020504
  s_cbranch_scc0  label_0263                                // 0000058C: BF8400FF
  v_add_i32     v1, vcc, s1, v1                             // 00000590: 4A020201
  s_waitcnt     lgkmcnt(0)                                  // 00000594: BF8C007F
  v_mul_lo_i32  v1, v1, s8                                  // 00000598: D2D60001 02001101
  v_add_i32     v1, vcc, s0, v1                             // 000005A0: 4A020200
  v_mul_f64     v[32:33], v[40:41], s[14:15]                // 000005A4: D2CA0020 02001D28
  v_add_i32     v34, vcc, v0, v1                            // 000005AC: 4A440300
  v_lshlrev_b32  v34, 3, v34                                // 000005B0: 34444483
  v_add_i32     v34, vcc, s13, v34                          // 000005B4: 4A44440D
  v_mul_f64     v[24:25], v[24:25], s[14:15]                // 000005B8: D2CA0018 02001D18
  v_add_i32     v35, vcc, 16, v0                            // 000005C0: 4A460090
  v_add_i32     v36, vcc, v1, v35                           // 000005C4: 4A484701
  v_lshlrev_b32  v36, 3, v36                                // 000005C8: 34484883
  v_add_i32     v36, vcc, s13, v36                          // 000005CC: 4A48480D
  v_mul_f64     v[16:17], v[16:17], s[14:15]                // 000005D0: D2CA0010 02001D10
  v_add_i32     v37, vcc, 32, v0                            // 000005D8: 4A4A00A0
  v_add_i32     v38, vcc, v1, v37                           // 000005DC: 4A4C4B01
  v_lshlrev_b32  v38, 3, v38                                // 000005E0: 344C4C83
  v_add_i32     v38, vcc, s13, v38                          // 000005E4: 4A4C4C0D
  v_mul_f64     v[8:9], v[78:79], s[14:15]                  // 000005E8: D2CA0008 02001D4E
  v_add_i32     v39, vcc, 48, v0                            // 000005F0: 4A4E00B0
  v_add_i32     v40, vcc, v1, v39                           // 000005F4: 4A504F01
  v_lshlrev_b32  v40, 3, v40                                // 000005F8: 34505083
  v_add_i32     v40, vcc, s13, v40                          // 000005FC: 4A50500D
  v_mul_f64     v[30:31], v[30:31], s[14:15]                // 00000600: D2CA001E 02001D1E
  s_lshl_b32    s0, s8, 4                                   // 00000608: 8F008408
  v_add_i32     v1, vcc, s0, v1                             // 0000060C: 4A020200
  v_add_i32     v41, vcc, v0, v1                            // 00000610: 4A520300
  v_lshlrev_b32  v41, 3, v41                                // 00000614: 34525283
  v_add_i32     v41, vcc, s13, v41                          // 00000618: 4A52520D
  v_add_i32     v42, vcc, v35, v1                           // 0000061C: 4A540323
  v_lshlrev_b32  v42, 3, v42                                // 00000620: 34545483
  v_add_i32     v42, vcc, s13, v42                          // 00000624: 4A54540D
  v_mul_f64     v[22:23], v[22:23], s[14:15]                // 00000628: D2CA0016 02001D16
  v_add_i32     v43, vcc, v37, v1                           // 00000630: 4A560325
  v_lshlrev_b32  v43, 3, v43                                // 00000634: 34565683
  v_add_i32     v43, vcc, s13, v43                          // 00000638: 4A56560D
  v_mul_f64     v[14:15], v[14:15], s[14:15]                // 0000063C: D2CA000E 02001D0E
  v_add_i32     v44, vcc, v39, v1                           // 00000644: 4A580327
  v_lshlrev_b32  v44, 3, v44                                // 00000648: 34585883
  v_add_i32     v44, vcc, s13, v44                          // 0000064C: 4A58580D
  v_mul_f64     v[6:7], v[76:77], s[14:15]                  // 00000650: D2CA0006 02001D4C
  v_add_i32     v1, vcc, s0, v1                             // 00000658: 4A020200
  v_add_i32     v45, vcc, v0, v1                            // 0000065C: 4A5A0300
  v_lshlrev_b32  v45, 3, v45                                // 00000660: 345A5A83
  v_add_i32     v45, vcc, s13, v45                          // 00000664: 4A5A5A0D
  v_mul_f64     v[28:29], v[28:29], s[14:15]                // 00000668: D2CA001C 02001D1C
  v_add_i32     v46, vcc, v35, v1                           // 00000670: 4A5C0323
  v_lshlrev_b32  v46, 3, v46                                // 00000674: 345C5C83
  v_add_i32     v46, vcc, s13, v46                          // 00000678: 4A5C5C0D
  v_mul_f64     v[20:21], v[20:21], s[14:15]                // 0000067C: D2CA0014 02001D14
  v_add_i32     v47, vcc, v37, v1                           // 00000684: 4A5E0325
  v_lshlrev_b32  v47, 3, v47                                // 00000688: 345E5E83
  v_add_i32     v47, vcc, s13, v47                          // 0000068C: 4A5E5E0D
  v_mul_f64     v[12:13], v[12:13], s[14:15]                // 00000690: D2CA000C 02001D0C
  v_add_i32     v48, vcc, v39, v1                           // 00000698: 4A600327
  v_lshlrev_b32  v48, 3, v48                                // 0000069C: 34606083
  v_add_i32     v48, vcc, s13, v48                          // 000006A0: 4A60600D
  v_mul_f64     v[4:5], v[74:75], s[14:15]                  // 000006A4: D2CA0004 02001D4A
  v_add_i32     v1, vcc, s0, v1                             // 000006AC: 4A020200
  v_add_i32     v0, vcc, v0, v1                             // 000006B0: 4A000300
  v_lshlrev_b32  v0, 3, v0                                  // 000006B4: 34000083
  v_add_i32     v0, vcc, s13, v0                            // 000006B8: 4A00000D
  v_mul_f64     v[26:27], v[26:27], s[14:15]                // 000006BC: D2CA001A 02001D1A
  v_add_i32     v35, vcc, v35, v1                           // 000006C4: 4A460323
  v_lshlrev_b32  v35, 3, v35                                // 000006C8: 34464683
  v_add_i32     v35, vcc, s13, v35                          // 000006CC: 4A46460D
  v_mul_f64     v[18:19], v[18:19], s[14:15]                // 000006D0: D2CA0012 02001D12
  v_add_i32     v37, vcc, v37, v1                           // 000006D8: 4A4A0325
  v_lshlrev_b32  v37, 3, v37                                // 000006DC: 344A4A83
  v_add_i32     v37, vcc, s13, v37                          // 000006E0: 4A4A4A0D
  v_mul_f64     v[10:11], v[80:81], s[14:15]                // 000006E4: D2CA000A 02001D50
  v_add_i32     v1, vcc, v39, v1                            // 000006EC: 4A020327
  v_lshlrev_b32  v1, 3, v1                                  // 000006F0: 34020283
  v_add_i32     v1, vcc, s13, v1                            // 000006F4: 4A02020D
  v_mul_f64     v[2:3], v[70:71], s[14:15]                  // 000006F8: D2CA0002 02001D46
  s_load_dwordx4  s[0:3], s[2:3], 0x58                      // 00000700: C0800358
  s_waitcnt     lgkmcnt(0)                                  // 00000704: BF8C007F
  tbuffer_load_format_xy  v[49:50], v34, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 00000708: EBD91000 80003122
  s_waitcnt     vmcnt(0)                                    // 00000710: BF8C1F70
  v_mul_f64     v[49:50], v[49:50], s[18:19]                // 00000714: D2CA0031 02002531
  v_add_f64     v[32:33], v[32:33], v[49:50]                // 0000071C: D2C80020 02026320
  tbuffer_store_format_xy  v[32:33], v34, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 00000724: EBDD1000 80002022
  s_waitcnt     expcnt(0)                                   // 0000072C: BF8C1F0F
  tbuffer_load_format_xy  v[32:33], v36, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 00000730: EBD91000 80002024
  s_waitcnt     vmcnt(0)                                    // 00000738: BF8C1F70
  v_mul_f64     v[32:33], v[32:33], s[18:19]                // 0000073C: D2CA0020 02002520
  v_add_f64     v[24:25], v[24:25], v[32:33]                // 00000744: D2C80018 02024118
  tbuffer_store_format_xy  v[24:25], v36, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 0000074C: EBDD1000 80001824
  s_waitcnt     expcnt(0)                                   // 00000754: BF8C1F0F
  tbuffer_load_format_xy  v[24:25], v38, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 00000758: EBD91000 80001826
  s_waitcnt     vmcnt(0)                                    // 00000760: BF8C1F70
  v_mul_f64     v[24:25], v[24:25], s[18:19]                // 00000764: D2CA0018 02002518
  v_add_f64     v[16:17], v[16:17], v[24:25]                // 0000076C: D2C80010 02023110
  tbuffer_store_format_xy  v[16:17], v38, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 00000774: EBDD1000 80001026
  s_waitcnt     expcnt(0)                                   // 0000077C: BF8C1F0F
  tbuffer_load_format_xy  v[16:17], v40, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 00000780: EBD91000 80001028
  s_waitcnt     vmcnt(0)                                    // 00000788: BF8C1F70
  v_mul_f64     v[16:17], v[16:17], s[18:19]                // 0000078C: D2CA0010 02002510
  v_add_f64     v[8:9], v[8:9], v[16:17]                    // 00000794: D2C80008 02022108
  tbuffer_store_format_xy  v[8:9], v40, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 0000079C: EBDD1000 80000828
  s_waitcnt     expcnt(0)                                   // 000007A4: BF8C1F0F
  tbuffer_load_format_xy  v[8:9], v41, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 000007A8: EBD91000 80000829
  s_waitcnt     vmcnt(0)                                    // 000007B0: BF8C1F70
  v_mul_f64     v[8:9], v[8:9], s[18:19]                    // 000007B4: D2CA0008 02002508
  v_add_f64     v[8:9], v[30:31], v[8:9]                    // 000007BC: D2C80008 0202111E
  tbuffer_store_format_xy  v[8:9], v41, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 000007C4: EBDD1000 80000829
  s_waitcnt     expcnt(0)                                   // 000007CC: BF8C1F0F
  tbuffer_load_format_xy  v[8:9], v42, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 000007D0: EBD91000 8000082A
  s_waitcnt     vmcnt(0)                                    // 000007D8: BF8C1F70
  v_mul_f64     v[8:9], v[8:9], s[18:19]                    // 000007DC: D2CA0008 02002508
  v_add_f64     v[8:9], v[22:23], v[8:9]                    // 000007E4: D2C80008 02021116
  tbuffer_store_format_xy  v[8:9], v42, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 000007EC: EBDD1000 8000082A
  s_waitcnt     expcnt(0)                                   // 000007F4: BF8C1F0F
  tbuffer_load_format_xy  v[8:9], v43, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 000007F8: EBD91000 8000082B
  s_waitcnt     vmcnt(0)                                    // 00000800: BF8C1F70
  v_mul_f64     v[8:9], v[8:9], s[18:19]                    // 00000804: D2CA0008 02002508
  v_add_f64     v[8:9], v[14:15], v[8:9]                    // 0000080C: D2C80008 0202110E
  tbuffer_store_format_xy  v[8:9], v43, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 00000814: EBDD1000 8000082B
  s_waitcnt     expcnt(0)                                   // 0000081C: BF8C1F0F
  tbuffer_load_format_xy  v[8:9], v44, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 00000820: EBD91000 8000082C
  s_waitcnt     vmcnt(0)                                    // 00000828: BF8C1F70
  v_mul_f64     v[8:9], v[8:9], s[18:19]                    // 0000082C: D2CA0008 02002508
  v_add_f64     v[6:7], v[6:7], v[8:9]                      // 00000834: D2C80006 02021106
  tbuffer_store_format_xy  v[6:7], v44, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 0000083C: EBDD1000 8000062C
  s_waitcnt     expcnt(0)                                   // 00000844: BF8C1F0F
  tbuffer_load_format_xy  v[6:7], v45, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 00000848: EBD91000 8000062D
  s_waitcnt     vmcnt(0)                                    // 00000850: BF8C1F70
  v_mul_f64     v[6:7], v[6:7], s[18:19]                    // 00000854: D2CA0006 02002506
  v_add_f64     v[6:7], v[28:29], v[6:7]                    // 0000085C: D2C80006 02020D1C
  tbuffer_store_format_xy  v[6:7], v45, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 00000864: EBDD1000 8000062D
  s_waitcnt     expcnt(0)                                   // 0000086C: BF8C1F0F
  tbuffer_load_format_xy  v[6:7], v46, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 00000870: EBD91000 8000062E
  s_waitcnt     vmcnt(0)                                    // 00000878: BF8C1F70
  v_mul_f64     v[6:7], v[6:7], s[18:19]                    // 0000087C: D2CA0006 02002506
  v_add_f64     v[6:7], v[20:21], v[6:7]                    // 00000884: D2C80006 02020D14
  tbuffer_store_format_xy  v[6:7], v46, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 0000088C: EBDD1000 8000062E
  s_waitcnt     expcnt(0)                                   // 00000894: BF8C1F0F
  tbuffer_load_format_xy  v[6:7], v47, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 00000898: EBD91000 8000062F
  s_waitcnt     vmcnt(0)                                    // 000008A0: BF8C1F70
  v_mul_f64     v[6:7], v[6:7], s[18:19]                    // 000008A4: D2CA0006 02002506
  v_add_f64     v[6:7], v[12:13], v[6:7]                    // 000008AC: D2C80006 02020D0C
  tbuffer_store_format_xy  v[6:7], v47, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 000008B4: EBDD1000 8000062F
  s_waitcnt     expcnt(0)                                   // 000008BC: BF8C1F0F
  tbuffer_load_format_xy  v[6:7], v48, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 000008C0: EBD91000 80000630
  s_waitcnt     vmcnt(0)                                    // 000008C8: BF8C1F70
  v_mul_f64     v[6:7], v[6:7], s[18:19]                    // 000008CC: D2CA0006 02002506
  v_add_f64     v[4:5], v[4:5], v[6:7]                      // 000008D4: D2C80004 02020D04
  tbuffer_store_format_xy  v[4:5], v48, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 000008DC: EBDD1000 80000430
  s_waitcnt     expcnt(0)                                   // 000008E4: BF8C1F0F
  tbuffer_load_format_xy  v[4:5], v0, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 000008E8: EBD91000 80000400
  s_waitcnt     vmcnt(0)                                    // 000008F0: BF8C1F70
  v_mul_f64     v[4:5], v[4:5], s[18:19]                    // 000008F4: D2CA0004 02002504
  v_add_f64     v[4:5], v[26:27], v[4:5]                    // 000008FC: D2C80004 0202091A
  tbuffer_store_format_xy  v[4:5], v0, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 00000904: EBDD1000 80000400
  s_waitcnt     expcnt(0)                                   // 0000090C: BF8C1F0F
  tbuffer_load_format_xy  v[4:5], v35, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 00000910: EBD91000 80000423
  s_waitcnt     vmcnt(0)                                    // 00000918: BF8C1F70
  v_mul_f64     v[4:5], v[4:5], s[18:19]                    // 0000091C: D2CA0004 02002504
  v_add_f64     v[4:5], v[18:19], v[4:5]                    // 00000924: D2C80004 02020912
  tbuffer_store_format_xy  v[4:5], v35, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 0000092C: EBDD1000 80000423
  s_waitcnt     expcnt(0)                                   // 00000934: BF8C1F0F
  tbuffer_load_format_xy  v[4:5], v37, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 00000938: EBD91000 80000425
  s_waitcnt     vmcnt(0)                                    // 00000940: BF8C1F70
  v_mul_f64     v[4:5], v[4:5], s[18:19]                    // 00000944: D2CA0004 02002504
  v_add_f64     v[4:5], v[10:11], v[4:5]                    // 0000094C: D2C80004 0202090A
  tbuffer_store_format_xy  v[4:5], v37, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 00000954: EBDD1000 80000425
  s_waitcnt     expcnt(0)                                   // 0000095C: BF8C1F0F
  tbuffer_load_format_xy  v[4:5], v1, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 00000960: EBD91000 80000401
  s_waitcnt     vmcnt(0)                                    // 00000968: BF8C1F70
  v_mul_f64     v[4:5], v[4:5], s[18:19]                    // 0000096C: D2CA0004 02002504
  v_add_f64     v[2:3], v[2:3], v[4:5]                      // 00000974: D2C80002 02020902
  tbuffer_store_format_xy  v[2:3], v1, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 0000097C: EBDD1000 80000201
  s_branch      label_0263                                  // 00000984: BF820001
  s_branch      label_0263                                  // 00000988: BF820000
label_0263:
  s_endpgm                                                  // 0000098C: BF810000
end

; ----------------- CS Data ------------------------

codeLenInByte        = 2448;Bytes

userElementCount     = 3;
;  userElements[0]    = PTR_UAV_TABLE, 0, s[2:3]
;  userElements[1]    = IMM_CONST_BUFFER, 0, s[4:7]
;  userElements[2]    = IMM_CONST_BUFFER, 1, s[8:11]
extUserElementCount  = 0;
NumVgprs             = 82;
NumSgprs             = 28;
FloatMode            = 192;
IeeeMode             = 0;
ScratchSize          = 0;
; texResourceUsage[0]     = 0x00000000
; texResourceUsage[1]     = 0x00000000
; texResourceUsage[2]     = 0x00000000
; texResourceUsage[3]     = 0x00000000
; texResourceUsage[4]     = 0x00000000
; texResourceUsage[5]     = 0x00000000
; texResourceUsage[6]     = 0x00000000
; texResourceUsage[7]     = 0x00000000
; fetch4ResourceUsage[0]  = 0x00000000
; fetch4ResourceUsage[1]  = 0x00000000
; fetch4ResourceUsage[2]  = 0x00000000
; fetch4ResourceUsage[3]  = 0x00000000
; fetch4ResourceUsage[4]  = 0x00000000
; fetch4ResourceUsage[5]  = 0x00000000
; fetch4ResourceUsage[6]  = 0x00000000
; fetch4ResourceUsage[7]  = 0x00000000
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000000

;COMPUTE_PGM_RSRC2       = 0x00218998
COMPUTE_PGM_RSRC2:USER_SGPR      = 12
COMPUTE_PGM_RSRC2:TGID_X_EN      = 1
COMPUTE_PGM_RSRC2:TGID_Y_EN      = 1
COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT = 1
COMPUTE_PGM_RSRC2:LDS_SIZE       = 67
