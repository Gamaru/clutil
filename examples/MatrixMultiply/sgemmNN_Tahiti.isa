ShaderType = IL_SHADER_COMPUTE
TargetChip = t
; ------------- SC_SRCSHADER Dump ------------------
SC_SHADERSTATE: u32NumIntVSConst = 0
SC_SHADERSTATE: u32NumIntPSConst = 0
SC_SHADERSTATE: u32NumIntGSConst = 0
SC_SHADERSTATE: u32NumBoolVSConst = 0
SC_SHADERSTATE: u32NumBoolPSConst = 0
SC_SHADERSTATE: u32NumBoolGSConst = 0
SC_SHADERSTATE: u32NumFloatVSConst = 0
SC_SHADERSTATE: u32NumFloatPSConst = 0
SC_SHADERSTATE: u32NumFloatGSConst = 0
fConstantsAvailable = 1
iConstantsAvailable = 1
bConstantsAvailable = 1
u32SCOptions[0] = 0x01A00000 SCOption_IGNORE_SAMPLE_L_BUG SCOption_FLOAT_DO_NOT_DIST SCOption_FLOAT_DO_NOT_REASSOC
u32SCOptions[1] = 0x00000000
u32SCOptions[2] = 0x20800001 SCOption_R800_UAV_NONARRAY_FIXUP SCOption_R1000_BYTE_SHORT_WRITE_WORKAROUND_BUG317611 SCOption_R1000_READLANE_SMRD_WORKAROUND_BUG343479
; -------- Disassembly --------------------
shader main
  asic(SI_ASIC)
  type(CS)

  s_mov_b32     m0, 0x00008000                              // 00000000: BEFC03FF 00008000
  s_buffer_load_dwordx2  s[0:1], s[4:7], 0x1c               // 00000008: C240051C
  s_buffer_load_dword  s4, s[8:11], 0x00                    // 0000000C: C2020900
  s_buffer_load_dword  s5, s[8:11], 0x04                    // 00000010: C2028904
  s_buffer_load_dword  s6, s[8:11], 0x08                    // 00000014: C2030908
  s_buffer_load_dword  s7, s[8:11], 0x0c                    // 00000018: C203890C
  s_buffer_load_dword  s14, s[8:11], 0x10                   // 0000001C: C2070910
  s_buffer_load_dword  s15, s[8:11], 0x14                   // 00000020: C2078914
  s_buffer_load_dword  s16, s[8:11], 0x18                   // 00000024: C2080918
  s_waitcnt     lgkmcnt(0)                                  // 00000028: BF8C007F
  s_add_i32     s0, s12, s0                                 // 0000002C: 8100000C
  s_add_i32     s1, s13, s1                                 // 00000030: 8101010D
  s_mulk_i32    s1, 0x0060                                  // 00000034: B8010060
  s_mulk_i32    s0, 0x0070                                  // 00000038: B8000070
  s_buffer_load_dword  s12, s[8:11], 0x1c                   // 0000003C: C206091C
  s_buffer_load_dword  s13, s[8:11], 0x20                   // 00000040: C2068920
  s_buffer_load_dword  s17, s[8:11], 0x24                   // 00000044: C2088924
  s_buffer_load_dword  s8, s[8:11], 0x28                    // 00000048: C2040928
  s_cmp_ge_i32  s6, 1                                       // 0000004C: BF038106
  s_cbranch_scc0  label_0155                                // 00000050: BF840140
  v_lshlrev_b32  v2, 2, v1                                  // 00000054: 34040282
  v_add_i32     v2, vcc, s16, v2                            // 00000058: 4A040410
  v_add_i32     v3, vcc, s1, v0                             // 0000005C: 4A060001
  s_waitcnt     lgkmcnt(0)                                  // 00000060: BF8C007F
  v_mul_lo_i32  v4, s12, v3                                 // 00000064: D2D60004 0202060C
  v_lshlrev_b32  v4, 2, v4                                  // 0000006C: 34080882
  v_add_i32     v4, vcc, v2, v4                             // 00000070: 4A080902
  v_mul_lo_i32  v5, v1, s15                                 // 00000074: D2D60005 02001F01
  v_add_i32     v5, vcc, v0, v5                             // 0000007C: 4A0A0B00
  v_add_i32     v5, vcc, s0, v5                             // 00000080: 4A0A0A00
  v_lshlrev_b32  v5, 2, v5                                  // 00000084: 340A0A82
  v_add_i32     v5, vcc, s14, v5                            // 00000088: 4A0A0A0E
  v_add_i32     v55, vcc, 0x00000100, v5                    // 0000008C: 4A6E0AFF 00000100
  v_add_i32     v6, vcc, 16, v3                             // 00000094: 4A0C0690
  v_mul_lo_i32  v6, s12, v6                                 // 00000098: D2D60006 02020C0C
  v_lshlrev_b32  v6, 2, v6                                  // 000000A0: 340C0C82
  v_add_i32     v6, vcc, v2, v6                             // 000000A4: 4A0C0D02
  v_add_i32     v7, vcc, 32, v3                             // 000000A8: 4A0E06A0
  v_mul_lo_i32  v7, s12, v7                                 // 000000AC: D2D60007 02020E0C
  v_lshlrev_b32  v7, 2, v7                                  // 000000B4: 340E0E82
  v_add_i32     v7, vcc, v2, v7                             // 000000B8: 4A0E0F02
  v_add_i32     v8, vcc, 48, v3                             // 000000BC: 4A1006B0
  v_mul_lo_i32  v8, s12, v8                                 // 000000C0: D2D60008 0202100C
  v_lshlrev_b32  v8, 2, v8                                  // 000000C8: 34101082
  v_add_i32     v8, vcc, v2, v8                             // 000000CC: 4A101102
  v_add_i32     v9, vcc, 64, v3                             // 000000D0: 4A1206C0
  v_mul_lo_i32  v9, s12, v9                                 // 000000D4: D2D60009 0202120C
  v_lshlrev_b32  v9, 2, v9                                  // 000000DC: 34121282
  v_add_i32     v9, vcc, v2, v9                             // 000000E0: 4A121302
  v_add_i32     v10, vcc, 0x00000050, v3                    // 000000E4: 4A1406FF 00000050
  v_mul_lo_i32  v10, s12, v10                               // 000000EC: D2D6000A 0202140C
  v_lshlrev_b32  v10, 2, v10                                // 000000F4: 34141482
  v_add_i32     v10, vcc, v2, v10                           // 000000F8: 4A141502
  v_add_i32     v3, vcc, 0x00000060, v3                     // 000000FC: 4A0606FF 00000060
  v_mul_lo_i32  v3, s12, v3                                 // 00000104: D2D60003 0202060C
  v_lshlrev_b32  v3, 2, v3                                  // 0000010C: 34060682
  v_add_i32     v2, vcc, v2, v3                             // 00000110: 4A040702
  s_lshl_b32    s9, s15, 6                                  // 00000114: 8F09860F
  v_lshlrev_b32  v3, 2, v0                                  // 00000118: 34060082
  s_movk_i32    s10, 0x0071                                 // 0000011C: B00A0071
  v_mul_lo_i32  v11, v1, s10                                // 00000120: D2D6000B 02001501
  v_add_i32     v11, vcc, v0, v11                           // 00000128: 4A161700
  v_mul_lo_i32  v12, v0, 17                                 // 0000012C: D2D6000C 02012300
  v_add_i32     v12, vcc, v1, v12                           // 00000134: 4A181901
  s_movk_i32    s10, 0x0044                                 // 00000138: B00A0044
  v_mul_lo_i32  v13, v1, s10                                // 0000013C: D2D6000D 02001501
  s_load_dwordx4  s[20:23], s[2:3], 0x48                    // 00000144: C08A0348
  s_load_dwordx4  s[24:27], s[2:3], 0x50                    // 00000148: C08C0350
  v_mov_b32     v85, 0                                      // 0000014C: 7EAA0280
  v_mov_b32     v86, 0                                      // 00000150: 7EAC0280
  v_mov_b32     v78, 0                                      // 00000154: 7E9C0280
  v_mov_b32     v5, 0                                       // 00000158: 7E0A0280
  v_mov_b32     v69, 0                                      // 0000015C: 7E8A0280
  v_mov_b32     v87, 0                                      // 00000160: 7EAE0280
  v_mov_b32     v88, 0                                      // 00000164: 7EB00280
  v_mov_b32     v84, 0                                      // 00000168: 7EA80280
  v_mov_b32     v77, 0                                      // 0000016C: 7E9A0280
  v_mov_b32     v70, 0                                      // 00000170: 7E8C0280
  v_mov_b32     v71, 0                                      // 00000174: 7E8E0280
  v_mov_b32     v89, 0                                      // 00000178: 7EB20280
  v_mov_b32     v14, 0                                      // 0000017C: 7E1C0280
  v_mov_b32     v15, 0                                      // 00000180: 7E1E0280
  v_mov_b32     v16, 0                                      // 00000184: 7E200280
  v_mov_b32     v17, 0                                      // 00000188: 7E220280
  v_mov_b32     v18, 0                                      // 0000018C: 7E240280
  v_mov_b32     v19, 0                                      // 00000190: 7E260280
  v_mov_b32     v20, 0                                      // 00000194: 7E280280
  v_mov_b32     v21, 0                                      // 00000198: 7E2A0280
  v_mov_b32     v22, 0                                      // 0000019C: 7E2C0280
  v_mov_b32     v23, 0                                      // 000001A0: 7E2E0280
  v_mov_b32     v24, 0                                      // 000001A4: 7E300280
  v_mov_b32     v25, 0                                      // 000001A8: 7E320280
  v_mov_b32     v26, 0                                      // 000001AC: 7E340280
  v_mov_b32     v27, 0                                      // 000001B0: 7E360280
  v_mov_b32     v28, 0                                      // 000001B4: 7E380280
  v_mov_b32     v29, 0                                      // 000001B8: 7E3A0280
  v_mov_b32     v30, 0                                      // 000001BC: 7E3C0280
  v_mov_b32     v31, 0                                      // 000001C0: 7E3E0280
  v_mov_b32     v32, 0                                      // 000001C4: 7E400280
  v_mov_b32     v33, 0                                      // 000001C8: 7E420280
  v_mov_b32     v34, 0                                      // 000001CC: 7E440280
  v_mov_b32     v35, 0                                      // 000001D0: 7E460280
  v_mov_b32     v36, 0                                      // 000001D4: 7E480280
  v_mov_b32     v37, 0                                      // 000001D8: 7E4A0280
  v_mov_b32     v38, 0                                      // 000001DC: 7E4C0280
  v_mov_b32     v39, 0                                      // 000001E0: 7E4E0280
  v_mov_b32     v40, 0                                      // 000001E4: 7E500280
  v_mov_b32     v41, 0                                      // 000001E8: 7E520280
  v_mov_b32     v42, 0                                      // 000001EC: 7E540280
  v_mov_b32     v43, 0                                      // 000001F0: 7E560280
  s_movk_i32    s10, 0x0000                                 // 000001F4: B00A0000
label_007E:
  s_waitcnt     0x0000                                      // 000001F8: BF8C0000
  v_lshlrev_b32  v56, 2, v11                                // 000001FC: 34701682
  v_add_i32     v57, vcc, 0xffffff00, v55                   // 00000200: 4A726EFF FFFFFF00
  v_lshlrev_b32  v58, 2, v12                                // 00000208: 34741882
  s_lshl_b32    s11, s10, 2                                 // 0000020C: 8F0B820A
  tbuffer_load_format_x  v57, v57, s[20:23], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000210: EBA01000 80053939
  tbuffer_load_format_x  v59, v55, s[20:23], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000218: EBA01000 80053B37
  tbuffer_load_format_x  v60, v55, s[20:23], 0 offen offset:64 format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000220: EBA01040 80053C37
  tbuffer_load_format_x  v61, v55, s[20:23], 0 offen offset:128 format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000228: EBA01080 80053D37
  s_waitcnt     vmcnt(3)                                    // 00000230: BF8C1F73
  ds_write_b32  v56, v57                                    // 00000234: D8340000 00003938
  v_add_i32     v57, vcc, s11, v4                           // 0000023C: 4A72080B
  v_add_i32     v62, vcc, 0xffffff40, v55                   // 00000240: 4A7C6EFF FFFFFF40
  v_add_i32     v63, vcc, s11, v6                           // 00000248: 4A7E0C0B
  v_add_i32     v64, vcc, 0xffffff80, v55                   // 0000024C: 4A806EFF FFFFFF80
  tbuffer_load_format_x  v57, v57, s[24:27], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000254: EBA01000 80063939
  tbuffer_load_format_x  v62, v62, s[20:23], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 0000025C: EBA01000 80053E3E
  tbuffer_load_format_x  v63, v63, s[24:27], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000264: EBA01000 80063F3F
  tbuffer_load_format_x  v64, v64, s[20:23], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 0000026C: EBA01000 80054040
  s_waitcnt     vmcnt(3)                                    // 00000274: BF8C1F73
  ds_write_b32  v58, v57 offset:7232                        // 00000278: D8341C40 0000393A
  s_waitcnt     vmcnt(2)                                    // 00000280: BF8C1F72
  ds_write_b32  v56, v62 offset:64                          // 00000284: D8340040 00003E38
  s_waitcnt     vmcnt(1)                                    // 0000028C: BF8C1F71
  ds_write_b32  v58, v63 offset:8320                        // 00000290: D8342080 00003F3A
  s_waitcnt     vmcnt(0)                                    // 00000298: BF8C1F70
  ds_write_b32  v56, v64 offset:128                         // 0000029C: D8340080 00004038
  v_add_i32     v57, vcc, s11, v7                           // 000002A4: 4A720E0B
  v_add_i32     v62, vcc, 0xffffffc0, v55                   // 000002A8: 4A7C6EFF FFFFFFC0
  v_add_i32     v63, vcc, s11, v8                           // 000002B0: 4A7E100B
  v_add_i32     v64, vcc, s11, v9                           // 000002B4: 4A80120B
  tbuffer_load_format_x  v57, v57, s[24:27], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 000002B8: EBA01000 80063939
  tbuffer_load_format_x  v62, v62, s[20:23], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 000002C0: EBA01000 80053E3E
  tbuffer_load_format_x  v63, v63, s[24:27], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 000002C8: EBA01000 80063F3F
  tbuffer_load_format_x  v64, v64, s[24:27], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 000002D0: EBA01000 80064040
  s_waitcnt     vmcnt(3)                                    // 000002D8: BF8C1F73
  ds_write_b32  v58, v57 offset:9408                        // 000002DC: D83424C0 0000393A
  s_waitcnt     vmcnt(2)                                    // 000002E4: BF8C1F72
  ds_write_b32  v56, v62 offset:192                         // 000002E8: D83400C0 00003E38
  s_waitcnt     vmcnt(1)                                    // 000002F0: BF8C1F71
  ds_write_b32  v58, v63 offset:10496                       // 000002F4: D8342900 00003F3A
  ds_write_b32  v56, v59 offset:256                         // 000002FC: D8340100 00003B38
  s_waitcnt     vmcnt(0)                                    // 00000304: BF8C1F70
  ds_write_b32  v58, v64 offset:11584                       // 00000308: D8342D40 0000403A
  ds_write_b32  v56, v60 offset:320                         // 00000310: D8340140 00003C38
  v_add_i32     v57, vcc, s11, v10                          // 00000318: 4A72140B
  v_add_i32     v59, vcc, s11, v2                           // 0000031C: 4A76040B
  tbuffer_load_format_x  v57, v57, s[24:27], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000320: EBA01000 80063939
  tbuffer_load_format_x  v59, v59, s[24:27], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000328: EBA01000 80063B3B
  s_waitcnt     vmcnt(1)                                    // 00000330: BF8C1F71
  ds_write_b32  v58, v57 offset:12672                       // 00000334: D8343180 0000393A
  ds_write_b32  v56, v61 offset:384                         // 0000033C: D8340180 00003D38
  s_waitcnt     vmcnt(0)                                    // 00000344: BF8C1F70
  ds_write_b32  v58, v59 offset:13760                       // 00000348: D83435C0 00003B3A
  s_waitcnt     lgkmcnt(0)                                  // 00000350: BF8C007F
  s_barrier                                                 // 00000354: BF8A0000
  s_movk_i32    s11, 0x0000                                 // 00000358: B00B0000
label_00D7:
  s_waitcnt     0x0000                                      // 0000035C: BF8C0000
  s_mul_i32     s12, s11, 0x000001c4                        // 00000360: 930CFF0B 000001C4
  v_add_i32     v56, vcc, s12, v3                           // 00000368: 4A70060C
  ds_read2_b32  v[57:58], v56 offset0:96 offset1:80         // 0000036C: D8DC5060 39000038
  ds_read2_b32  v[59:60], v56 offset0:64 offset1:48         // 00000374: D8DC3040 3B000038
  ds_read2_b32  v[61:62], v56 offset0:32 offset1:16         // 0000037C: D8DC1020 3D000038
  ds_read_b32   v56, v56                                    // 00000384: D8D80000 38000038
  s_lshl_b32    s12, s11, 2                                 // 0000038C: 8F0C820B
  v_add_i32     v63, vcc, s12, v13                          // 00000390: 4A7E1A0C
  v_add_i32     v64, vcc, 0x00002080, v63                   // 00000394: 4A807EFF 00002080
  v_add_i32     v65, vcc, 0x00001c40, v63                   // 0000039C: 4A827EFF 00001C40
  ds_read2st64_b32  v[66:67], v64 offset0:17                // 000003A4: D8E00011 42000040
  ds_read2st64_b32  v[64:65], v65 offset0:17                // 000003AC: D8E00011 40000041
  ds_read_b32   v68, v63 offset:10496                       // 000003B4: D8D82900 4400003F
  ds_read_b32   v63, v63 offset:9408                        // 000003BC: D8D824C0 3F00003F
  s_waitcnt     lgkmcnt(2)                                  // 000003C4: BF8C027F
  v_fma_f32     v25, v56, v65, v25                          // 000003C8: D2960019 04668338
  v_fma_f32     v26, v56, v67, v26                          // 000003D0: D296001A 046A8738
  s_waitcnt     lgkmcnt(0)                                  // 000003D8: BF8C007F
  v_fma_f32     v27, v56, v63, v27                          // 000003DC: D296001B 046E7F38
  v_fma_f32     v28, v56, v68, v28                          // 000003E4: D296001C 04728938
  v_fma_f32     v29, v56, v64, v29                          // 000003EC: D296001D 04768138
  v_fma_f32     v30, v56, v66, v30                          // 000003F4: D296001E 047A8538
  v_fma_f32     v31, v62, v65, v31                          // 000003FC: D296001F 047E833E
  v_fma_f32     v32, v62, v67, v32                          // 00000404: D2960020 0482873E
  v_fma_f32     v33, v62, v63, v33                          // 0000040C: D2960021 04867F3E
  v_fma_f32     v34, v62, v68, v34                          // 00000414: D2960022 048A893E
  v_fma_f32     v35, v62, v64, v35                          // 0000041C: D2960023 048E813E
  v_fma_f32     v36, v62, v66, v36                          // 00000424: D2960024 0492853E
  v_fma_f32     v37, v61, v65, v37                          // 0000042C: D2960025 0496833D
  v_fma_f32     v38, v61, v67, v38                          // 00000434: D2960026 049A873D
  v_fma_f32     v39, v61, v63, v39                          // 0000043C: D2960027 049E7F3D
  v_fma_f32     v40, v61, v68, v40                          // 00000444: D2960028 04A2893D
  v_fma_f32     v41, v61, v64, v41                          // 0000044C: D2960029 04A6813D
  v_fma_f32     v42, v61, v66, v42                          // 00000454: D296002A 04AA853D
  v_fma_f32     v43, v60, v65, v43                          // 0000045C: D296002B 04AE833C
  v_fma_f32     v24, v60, v67, v24                          // 00000464: D2960018 0462873C
  v_fma_f32     v23, v60, v63, v23                          // 0000046C: D2960017 045E7F3C
  v_fma_f32     v22, v60, v68, v22                          // 00000474: D2960016 045A893C
  v_fma_f32     v21, v60, v64, v21                          // 0000047C: D2960015 0456813C
  v_fma_f32     v20, v60, v66, v20                          // 00000484: D2960014 0452853C
  v_fma_f32     v19, v59, v65, v19                          // 0000048C: D2960013 044E833B
  v_fma_f32     v18, v59, v67, v18                          // 00000494: D2960012 044A873B
  v_fma_f32     v17, v59, v63, v17                          // 0000049C: D2960011 04467F3B
  v_fma_f32     v16, v59, v68, v16                          // 000004A4: D2960010 0442893B
  v_fma_f32     v15, v59, v64, v15                          // 000004AC: D296000F 043E813B
  v_fma_f32     v14, v59, v66, v14                          // 000004B4: D296000E 043A853B
  v_fma_f32     v89, v58, v65, v89                          // 000004BC: D2960059 0566833A
  v_fma_f32     v71, v58, v67, v71                          // 000004C4: D2960047 051E873A
  v_fma_f32     v70, v58, v63, v70                          // 000004CC: D2960046 051A7F3A
  v_fma_f32     v77, v58, v68, v77                          // 000004D4: D296004D 0536893A
  v_fma_f32     v84, v58, v64, v84                          // 000004DC: D2960054 0552813A
  v_fma_f32     v88, v58, v66, v88                          // 000004E4: D2960058 0562853A
  v_fma_f32     v87, v57, v65, v87                          // 000004EC: D2960057 055E8339
  v_fma_f32     v69, v57, v67, v69                          // 000004F4: D2960045 05168739
  v_fma_f32     v5, v57, v63, v5                            // 000004FC: D2960005 04167F39
  v_fma_f32     v78, v57, v68, v78                          // 00000504: D296004E 053A8939
  v_fma_f32     v86, v57, v64, v86                          // 0000050C: D2960056 055A8139
  v_fma_f32     v85, v57, v66, v85                          // 00000514: D2960055 05568539
  s_add_i32     s12, 1, s11                                 // 0000051C: 810C0B81
  s_cmp_eq_i32  s11, 15                                     // 00000520: BF008F0B
  s_cbranch_scc0  label_014B                                // 00000524: BF840001
  s_branch      label_014D                                  // 00000528: BF820002
label_014B:
  s_mov_b32     s11, s12                                    // 0000052C: BE8B030C
  s_branch      label_00D7                                  // 00000530: BF82FF8A
label_014D:
  v_add_i32     v55, vcc, s9, v55                           // 00000534: 4A6E6E09
  s_addk_i32    s10, 0x0010                                 // 00000538: B78A0010
  s_barrier                                                 // 0000053C: BF8A0000
  s_cmp_le_i32  s6, s10                                     // 00000540: BF050A06
  s_cbranch_scc0  label_007E                                // 00000544: BF84FF2C
  s_branch      label_017F                                  // 00000548: BF82002C
  s_branch      label_007E                                  // 0000054C: BF82FF2A
  s_branch      label_017F                                  // 00000550: BF82002A
label_0155:
  v_mov_b32     v85, 0                                      // 00000554: 7EAA0280
  v_mov_b32     v86, 0                                      // 00000558: 7EAC0280
  v_mov_b32     v78, 0                                      // 0000055C: 7E9C0280
  v_mov_b32     v5, 0                                       // 00000560: 7E0A0280
  v_mov_b32     v69, 0                                      // 00000564: 7E8A0280
  v_mov_b32     v87, 0                                      // 00000568: 7EAE0280
  v_mov_b32     v88, 0                                      // 0000056C: 7EB00280
  v_mov_b32     v84, 0                                      // 00000570: 7EA80280
  v_mov_b32     v77, 0                                      // 00000574: 7E9A0280
  v_mov_b32     v70, 0                                      // 00000578: 7E8C0280
  v_mov_b32     v71, 0                                      // 0000057C: 7E8E0280
  v_mov_b32     v89, 0                                      // 00000580: 7EB20280
  v_mov_b32     v14, 0                                      // 00000584: 7E1C0280
  v_mov_b32     v15, 0                                      // 00000588: 7E1E0280
  v_mov_b32     v16, 0                                      // 0000058C: 7E200280
  v_mov_b32     v17, 0                                      // 00000590: 7E220280
  v_mov_b32     v18, 0                                      // 00000594: 7E240280
  v_mov_b32     v19, 0                                      // 00000598: 7E260280
  v_mov_b32     v20, 0                                      // 0000059C: 7E280280
  v_mov_b32     v21, 0                                      // 000005A0: 7E2A0280
  v_mov_b32     v22, 0                                      // 000005A4: 7E2C0280
  v_mov_b32     v23, 0                                      // 000005A8: 7E2E0280
  v_mov_b32     v24, 0                                      // 000005AC: 7E300280
  v_mov_b32     v25, 0                                      // 000005B0: 7E320280
  v_mov_b32     v26, 0                                      // 000005B4: 7E340280
  v_mov_b32     v27, 0                                      // 000005B8: 7E360280
  v_mov_b32     v28, 0                                      // 000005BC: 7E380280
  v_mov_b32     v29, 0                                      // 000005C0: 7E3A0280
  v_mov_b32     v30, 0                                      // 000005C4: 7E3C0280
  v_mov_b32     v31, 0                                      // 000005C8: 7E3E0280
  v_mov_b32     v32, 0                                      // 000005CC: 7E400280
  v_mov_b32     v33, 0                                      // 000005D0: 7E420280
  v_mov_b32     v34, 0                                      // 000005D4: 7E440280
  v_mov_b32     v35, 0                                      // 000005D8: 7E460280
  v_mov_b32     v36, 0                                      // 000005DC: 7E480280
  v_mov_b32     v37, 0                                      // 000005E0: 7E4A0280
  v_mov_b32     v38, 0                                      // 000005E4: 7E4C0280
  v_mov_b32     v39, 0                                      // 000005E8: 7E4E0280
  v_mov_b32     v40, 0                                      // 000005EC: 7E500280
  v_mov_b32     v41, 0                                      // 000005F0: 7E520280
  v_mov_b32     v42, 0                                      // 000005F4: 7E540280
  v_mov_b32     v43, 0                                      // 000005F8: 7E560280
label_017F:
  s_add_i32     s6, s0, 0x0000006f                          // 000005FC: 8106FF00 0000006F
  s_cmp_gt_i32  s5, s6                                      // 00000604: BF020605
  s_cbranch_scc0  label_034A                                // 00000608: BF8401C7
  s_add_i32     s5, s1, 0x0000005f                          // 0000060C: 8105FF01 0000005F
  s_cmp_gt_i32  s4, s5                                      // 00000614: BF020504
  s_cbranch_scc0  label_034A                                // 00000618: BF8401C3
  v_add_i32     v1, vcc, s1, v1                             // 0000061C: 4A020201
  s_waitcnt     lgkmcnt(0)                                  // 00000620: BF8C007F
  v_mul_lo_i32  v1, v1, s8                                  // 00000624: D2D60001 02001101
  v_add_i32     v1, vcc, s0, v1                             // 0000062C: 4A020200
  v_add_i32     v44, vcc, v0, v1                            // 00000630: 4A580300
  v_lshlrev_b32  v44, 2, v44                                // 00000634: 34585882
  v_add_i32     v44, vcc, s17, v44                          // 00000638: 4A585811
  v_add_i32     v45, vcc, 16, v0                            // 0000063C: 4A5A0090
  v_add_i32     v46, vcc, v1, v45                           // 00000640: 4A5C5B01
  v_lshlrev_b32  v46, 2, v46                                // 00000644: 345C5C82
  v_add_i32     v46, vcc, s17, v46                          // 00000648: 4A5C5C11
  v_add_i32     v47, vcc, 32, v0                            // 0000064C: 4A5E00A0
  v_add_i32     v48, vcc, v1, v47                           // 00000650: 4A605F01
  v_lshlrev_b32  v48, 2, v48                                // 00000654: 34606082
  v_add_i32     v48, vcc, s17, v48                          // 00000658: 4A606011
  v_add_i32     v49, vcc, 48, v0                            // 0000065C: 4A6200B0
  v_add_i32     v50, vcc, v1, v49                           // 00000660: 4A646301
  v_lshlrev_b32  v50, 2, v50                                // 00000664: 34646482
  v_add_i32     v50, vcc, s17, v50                          // 00000668: 4A646411
  v_add_i32     v51, vcc, 64, v0                            // 0000066C: 4A6600C0
  v_add_i32     v52, vcc, v1, v51                           // 00000670: 4A686701
  v_lshlrev_b32  v52, 2, v52                                // 00000674: 34686882
  v_add_i32     v52, vcc, s17, v52                          // 00000678: 4A686811
  v_add_i32     v53, vcc, 0x00000050, v0                    // 0000067C: 4A6A00FF 00000050
  v_add_i32     v54, vcc, v1, v53                           // 00000684: 4A6C6B01
  v_lshlrev_b32  v54, 2, v54                                // 00000688: 346C6C82
  v_add_i32     v54, vcc, s17, v54                          // 0000068C: 4A6C6C11
  v_add_i32     v55, vcc, 0x00000060, v0                    // 00000690: 4A6E00FF 00000060
  v_add_i32     v56, vcc, v1, v55                           // 00000698: 4A706F01
  v_lshlrev_b32  v56, 2, v56                                // 0000069C: 34707082
  v_add_i32     v56, vcc, s17, v56                          // 000006A0: 4A707011
  s_lshl_b32    s0, s8, 4                                   // 000006A4: 8F008408
  v_add_i32     v1, vcc, s0, v1                             // 000006A8: 4A020200
  v_add_i32     v57, vcc, v0, v1                            // 000006AC: 4A720300
  v_lshlrev_b32  v57, 2, v57                                // 000006B0: 34727282
  v_add_i32     v57, vcc, s17, v57                          // 000006B4: 4A727211
  v_add_i32     v58, vcc, v45, v1                           // 000006B8: 4A74032D
  v_lshlrev_b32  v58, 2, v58                                // 000006BC: 34747482
  v_add_i32     v58, vcc, s17, v58                          // 000006C0: 4A747411
  v_mul_f32     v32, s7, v32                                // 000006C4: 10404007
  v_add_i32     v59, vcc, v47, v1                           // 000006C8: 4A76032F
  v_lshlrev_b32  v59, 2, v59                                // 000006CC: 34767682
  v_add_i32     v59, vcc, s17, v59                          // 000006D0: 4A767611
  v_mul_f32     v38, s7, v38                                // 000006D4: 104C4C07
  v_add_i32     v60, vcc, v49, v1                           // 000006D8: 4A780331
  v_lshlrev_b32  v60, 2, v60                                // 000006DC: 34787882
  v_add_i32     v60, vcc, s17, v60                          // 000006E0: 4A787811
  v_mul_f32     v24, s7, v24                                // 000006E4: 10303007
  v_add_i32     v61, vcc, v51, v1                           // 000006E8: 4A7A0333
  v_lshlrev_b32  v61, 2, v61                                // 000006EC: 347A7A82
  v_add_i32     v61, vcc, s17, v61                          // 000006F0: 4A7A7A11
  v_mul_f32     v18, s7, v18                                // 000006F4: 10242407
  v_add_i32     v62, vcc, v53, v1                           // 000006F8: 4A7C0335
  v_lshlrev_b32  v62, 2, v62                                // 000006FC: 347C7C82
  v_add_i32     v62, vcc, s17, v62                          // 00000700: 4A7C7C11
  v_mul_f32     v12, s7, v71                                // 00000704: 10188E07
  v_add_i32     v63, vcc, v55, v1                           // 00000708: 4A7E0337
  v_lshlrev_b32  v63, 2, v63                                // 0000070C: 347E7E82
  v_add_i32     v63, vcc, s17, v63                          // 00000710: 4A7E7E11
  v_mul_f32     v6, s7, v69                                 // 00000714: 100C8A07
  v_add_i32     v1, vcc, s0, v1                             // 00000718: 4A020200
  v_add_i32     v64, vcc, v0, v1                            // 0000071C: 4A800300
  v_lshlrev_b32  v64, 2, v64                                // 00000720: 34808082
  v_add_i32     v64, vcc, s17, v64                          // 00000724: 4A808011
  v_mul_f32     v27, s7, v27                                // 00000728: 10363607
  v_add_i32     v65, vcc, v45, v1                           // 0000072C: 4A82032D
  v_lshlrev_b32  v65, 2, v65                                // 00000730: 34828282
  v_add_i32     v65, vcc, s17, v65                          // 00000734: 4A828211
  v_mul_f32     v33, s7, v33                                // 00000738: 10424207
  v_add_i32     v66, vcc, v47, v1                           // 0000073C: 4A84032F
  v_lshlrev_b32  v66, 2, v66                                // 00000740: 34848482
  v_add_i32     v66, vcc, s17, v66                          // 00000744: 4A848411
  v_mul_f32     v39, s7, v39                                // 00000748: 104E4E07
  v_add_i32     v67, vcc, v49, v1                           // 0000074C: 4A860331
  v_lshlrev_b32  v67, 2, v67                                // 00000750: 34868682
  v_add_i32     v67, vcc, s17, v67                          // 00000754: 4A868611
  v_mul_f32     v23, s7, v23                                // 00000758: 102E2E07
  v_add_i32     v68, vcc, v51, v1                           // 0000075C: 4A880333
  v_lshlrev_b32  v68, 2, v68                                // 00000760: 34888882
  v_add_i32     v68, vcc, s17, v68                          // 00000764: 4A888811
  v_mul_f32     v17, s7, v17                                // 00000768: 10222207
  v_add_i32     v69, vcc, v53, v1                           // 0000076C: 4A8A0335
  v_lshlrev_b32  v69, 2, v69                                // 00000770: 348A8A82
  v_add_i32     v69, vcc, s17, v69                          // 00000774: 4A8A8A11
  v_mul_f32     v11, s7, v70                                // 00000778: 10168C07
  v_add_i32     v70, vcc, v55, v1                           // 0000077C: 4A8C0337
  v_lshlrev_b32  v70, 2, v70                                // 00000780: 348C8C82
  v_add_i32     v70, vcc, s17, v70                          // 00000784: 4A8C8C11
  v_mul_f32     v5, s7, v5                                  // 00000788: 100A0A07
  v_add_i32     v1, vcc, s0, v1                             // 0000078C: 4A020200
  v_add_i32     v71, vcc, v0, v1                            // 00000790: 4A8E0300
  v_lshlrev_b32  v71, 2, v71                                // 00000794: 348E8E82
  v_add_i32     v71, vcc, s17, v71                          // 00000798: 4A8E8E11
  v_mul_f32     v28, s7, v28                                // 0000079C: 10383807
  v_add_i32     v72, vcc, v45, v1                           // 000007A0: 4A90032D
  v_lshlrev_b32  v72, 2, v72                                // 000007A4: 34909082
  v_add_i32     v72, vcc, s17, v72                          // 000007A8: 4A909011
  v_mul_f32     v34, s7, v34                                // 000007AC: 10444407
  v_add_i32     v73, vcc, v47, v1                           // 000007B0: 4A92032F
  v_lshlrev_b32  v73, 2, v73                                // 000007B4: 34929282
  v_add_i32     v73, vcc, s17, v73                          // 000007B8: 4A929211
  v_mul_f32     v40, s7, v40                                // 000007BC: 10505007
  v_add_i32     v74, vcc, v49, v1                           // 000007C0: 4A940331
  v_lshlrev_b32  v74, 2, v74                                // 000007C4: 34949482
  v_add_i32     v74, vcc, s17, v74                          // 000007C8: 4A949411
  v_mul_f32     v22, s7, v22                                // 000007CC: 102C2C07
  v_add_i32     v75, vcc, v51, v1                           // 000007D0: 4A960333
  v_lshlrev_b32  v75, 2, v75                                // 000007D4: 34969682
  v_add_i32     v75, vcc, s17, v75                          // 000007D8: 4A969611
  v_mul_f32     v16, s7, v16                                // 000007DC: 10202007
  v_add_i32     v76, vcc, v53, v1                           // 000007E0: 4A980335
  v_lshlrev_b32  v76, 2, v76                                // 000007E4: 34989882
  v_add_i32     v76, vcc, s17, v76                          // 000007E8: 4A989811
  v_mul_f32     v10, s7, v77                                // 000007EC: 10149A07
  v_add_i32     v77, vcc, v55, v1                           // 000007F0: 4A9A0337
  v_lshlrev_b32  v77, 2, v77                                // 000007F4: 349A9A82
  v_add_i32     v77, vcc, s17, v77                          // 000007F8: 4A9A9A11
  v_mul_f32     v4, s7, v78                                 // 000007FC: 10089C07
  v_add_i32     v1, vcc, s0, v1                             // 00000800: 4A020200
  v_add_i32     v78, vcc, v0, v1                            // 00000804: 4A9C0300
  v_lshlrev_b32  v78, 2, v78                                // 00000808: 349C9C82
  v_add_i32     v78, vcc, s17, v78                          // 0000080C: 4A9C9C11
  v_mul_f32     v29, s7, v29                                // 00000810: 103A3A07
  v_add_i32     v79, vcc, v45, v1                           // 00000814: 4A9E032D
  v_lshlrev_b32  v79, 2, v79                                // 00000818: 349E9E82
  v_add_i32     v79, vcc, s17, v79                          // 0000081C: 4A9E9E11
  v_mul_f32     v35, s7, v35                                // 00000820: 10464607
  v_add_i32     v80, vcc, v47, v1                           // 00000824: 4AA0032F
  v_lshlrev_b32  v80, 2, v80                                // 00000828: 34A0A082
  v_add_i32     v80, vcc, s17, v80                          // 0000082C: 4AA0A011
  v_mul_f32     v41, s7, v41                                // 00000830: 10525207
  v_add_i32     v81, vcc, v49, v1                           // 00000834: 4AA20331
  v_lshlrev_b32  v81, 2, v81                                // 00000838: 34A2A282
  v_add_i32     v81, vcc, s17, v81                          // 0000083C: 4AA2A211
  v_mul_f32     v21, s7, v21                                // 00000840: 102A2A07
  v_add_i32     v82, vcc, v51, v1                           // 00000844: 4AA40333
  v_lshlrev_b32  v82, 2, v82                                // 00000848: 34A4A482
  v_add_i32     v82, vcc, s17, v82                          // 0000084C: 4AA4A411
  v_mul_f32     v15, s7, v15                                // 00000850: 101E1E07
  v_add_i32     v83, vcc, v53, v1                           // 00000854: 4AA60335
  v_lshlrev_b32  v83, 2, v83                                // 00000858: 34A6A682
  v_add_i32     v83, vcc, s17, v83                          // 0000085C: 4AA6A611
  v_mul_f32     v9, s7, v84                                 // 00000860: 1012A807
  v_add_i32     v84, vcc, v55, v1                           // 00000864: 4AA80337
  v_lshlrev_b32  v84, 2, v84                                // 00000868: 34A8A882
  v_add_i32     v84, vcc, s17, v84                          // 0000086C: 4AA8A811
  v_mul_f32     v3, s7, v86                                 // 00000870: 1006AC07
  v_add_i32     v1, vcc, s0, v1                             // 00000874: 4A020200
  v_add_i32     v0, vcc, v0, v1                             // 00000878: 4A000300
  v_lshlrev_b32  v0, 2, v0                                  // 0000087C: 34000082
  v_add_i32     v0, vcc, s17, v0                            // 00000880: 4A000011
  v_mul_f32     v30, s7, v30                                // 00000884: 103C3C07
  v_add_i32     v45, vcc, v45, v1                           // 00000888: 4A5A032D
  v_lshlrev_b32  v45, 2, v45                                // 0000088C: 345A5A82
  v_add_i32     v45, vcc, s17, v45                          // 00000890: 4A5A5A11
  v_mul_f32     v36, s7, v36                                // 00000894: 10484807
  v_add_i32     v47, vcc, v47, v1                           // 00000898: 4A5E032F
  v_lshlrev_b32  v47, 2, v47                                // 0000089C: 345E5E82
  v_add_i32     v47, vcc, s17, v47                          // 000008A0: 4A5E5E11
  v_mul_f32     v42, s7, v42                                // 000008A4: 10545407
  v_add_i32     v49, vcc, v49, v1                           // 000008A8: 4A620331
  v_lshlrev_b32  v49, 2, v49                                // 000008AC: 34626282
  v_add_i32     v49, vcc, s17, v49                          // 000008B0: 4A626211
  v_mul_f32     v20, s7, v20                                // 000008B4: 10282807
  v_add_i32     v51, vcc, v51, v1                           // 000008B8: 4A660333
  v_lshlrev_b32  v51, 2, v51                                // 000008BC: 34666682
  v_add_i32     v51, vcc, s17, v51                          // 000008C0: 4A666611
  v_mul_f32     v14, s7, v14                                // 000008C4: 101C1C07
  v_add_i32     v53, vcc, v53, v1                           // 000008C8: 4A6A0335
  v_lshlrev_b32  v53, 2, v53                                // 000008CC: 346A6A82
  v_add_i32     v53, vcc, s17, v53                          // 000008D0: 4A6A6A11
  v_mul_f32     v8, s7, v88                                 // 000008D4: 1010B007
  v_add_i32     v1, vcc, v55, v1                            // 000008D8: 4A020337
  v_lshlrev_b32  v1, 2, v1                                  // 000008DC: 34020282
  v_add_i32     v1, vcc, s17, v1                            // 000008E0: 4A020211
  v_mul_f32     v2, s7, v85                                 // 000008E4: 1004AA07
  s_load_dwordx4  s[0:3], s[2:3], 0x58                      // 000008E8: C0800358
  s_waitcnt     lgkmcnt(0)                                  // 000008EC: BF8C007F
  tbuffer_load_format_x  v55, v44, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 000008F0: EBA01000 8000372C
  s_waitcnt     vmcnt(0)                                    // 000008F8: BF8C1F70
  v_mul_f32     v55, s13, v55                               // 000008FC: 106E6E0D
  v_mac_f32     v55, s7, v25                                // 00000900: 3E6E3207
  tbuffer_store_format_x  v55, v44, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000904: EBA41000 8000372C
  tbuffer_load_format_x  v25, v46, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 0000090C: EBA01000 8000192E
  s_waitcnt     vmcnt(0)                                    // 00000914: BF8C1F70
  v_mul_f32     v25, s13, v25                               // 00000918: 1032320D
  v_mac_f32     v25, s7, v31                                // 0000091C: 3E323E07
  tbuffer_store_format_x  v25, v46, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000920: EBA41000 8000192E
  s_waitcnt     expcnt(0)                                   // 00000928: BF8C1F0F
  tbuffer_load_format_x  v25, v48, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 0000092C: EBA01000 80001930
  s_waitcnt     vmcnt(0)                                    // 00000934: BF8C1F70
  v_mul_f32     v25, s13, v25                               // 00000938: 1032320D
  v_mac_f32     v25, s7, v37                                // 0000093C: 3E324A07
  tbuffer_store_format_x  v25, v48, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000940: EBA41000 80001930
  s_waitcnt     expcnt(0)                                   // 00000948: BF8C1F0F
  tbuffer_load_format_x  v25, v50, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 0000094C: EBA01000 80001932
  s_waitcnt     vmcnt(0)                                    // 00000954: BF8C1F70
  v_mul_f32     v25, s13, v25                               // 00000958: 1032320D
  v_mac_f32     v25, s7, v43                                // 0000095C: 3E325607
  tbuffer_store_format_x  v25, v50, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000960: EBA41000 80001932
  s_waitcnt     expcnt(0)                                   // 00000968: BF8C1F0F
  tbuffer_load_format_x  v25, v52, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 0000096C: EBA01000 80001934
  s_waitcnt     vmcnt(0)                                    // 00000974: BF8C1F70
  v_mul_f32     v25, s13, v25                               // 00000978: 1032320D
  v_mac_f32     v25, s7, v19                                // 0000097C: 3E322607
  tbuffer_store_format_x  v25, v52, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000980: EBA41000 80001934
  tbuffer_load_format_x  v19, v54, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000988: EBA01000 80001336
  s_waitcnt     vmcnt(0)                                    // 00000990: BF8C1F70
  v_mul_f32     v19, s13, v19                               // 00000994: 1026260D
  v_mac_f32     v19, s7, v89                                // 00000998: 3E26B207
  tbuffer_store_format_x  v19, v54, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 0000099C: EBA41000 80001336
  tbuffer_load_format_x  v13, v56, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 000009A4: EBA01000 80000D38
  s_waitcnt     vmcnt(0)                                    // 000009AC: BF8C1F70
  v_mul_f32     v13, s13, v13                               // 000009B0: 101A1A0D
  v_mac_f32     v13, s7, v87                                // 000009B4: 3E1AAE07
  tbuffer_store_format_x  v13, v56, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 000009B8: EBA41000 80000D38
  tbuffer_load_format_x  v7, v57, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 000009C0: EBA01000 80000739
  s_waitcnt     vmcnt(0)                                    // 000009C8: BF8C1F70
  v_mul_f32     v7, s13, v7                                 // 000009CC: 100E0E0D
  v_mac_f32     v7, s7, v26                                 // 000009D0: 3E0E3407
  tbuffer_store_format_x  v7, v57, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 000009D4: EBA41000 80000739
  s_waitcnt     expcnt(0)                                   // 000009DC: BF8C1F0F
  tbuffer_load_format_x  v7, v58, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 000009E0: EBA01000 8000073A
  s_waitcnt     vmcnt(0)                                    // 000009E8: BF8C1F70
  v_mac_f32     v32, s13, v7                                // 000009EC: 3E400E0D
  tbuffer_store_format_x  v32, v58, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 000009F0: EBA41000 8000203A
  tbuffer_load_format_x  v7, v59, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 000009F8: EBA01000 8000073B
  s_waitcnt     vmcnt(0)                                    // 00000A00: BF8C1F70
  v_mac_f32     v38, s13, v7                                // 00000A04: 3E4C0E0D
  tbuffer_store_format_x  v38, v59, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000A08: EBA41000 8000263B
  tbuffer_load_format_x  v7, v60, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000A10: EBA01000 8000073C
  s_waitcnt     vmcnt(0)                                    // 00000A18: BF8C1F70
  v_mac_f32     v24, s13, v7                                // 00000A1C: 3E300E0D
  tbuffer_store_format_x  v24, v60, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000A20: EBA41000 8000183C
  tbuffer_load_format_x  v7, v61, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000A28: EBA01000 8000073D
  s_waitcnt     vmcnt(0)                                    // 00000A30: BF8C1F70
  v_mac_f32     v18, s13, v7                                // 00000A34: 3E240E0D
  tbuffer_store_format_x  v18, v61, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000A38: EBA41000 8000123D
  tbuffer_load_format_x  v7, v62, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000A40: EBA01000 8000073E
  s_waitcnt     vmcnt(0)                                    // 00000A48: BF8C1F70
  v_mac_f32     v12, s13, v7                                // 00000A4C: 3E180E0D
  tbuffer_store_format_x  v12, v62, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000A50: EBA41000 80000C3E
  tbuffer_load_format_x  v7, v63, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000A58: EBA01000 8000073F
  s_waitcnt     vmcnt(0)                                    // 00000A60: BF8C1F70
  v_mac_f32     v6, s13, v7                                 // 00000A64: 3E0C0E0D
  tbuffer_store_format_x  v6, v63, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000A68: EBA41000 8000063F
  s_waitcnt     expcnt(0)                                   // 00000A70: BF8C1F0F
  tbuffer_load_format_x  v6, v64, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000A74: EBA01000 80000640
  s_waitcnt     vmcnt(0)                                    // 00000A7C: BF8C1F70
  v_mac_f32     v27, s13, v6                                // 00000A80: 3E360C0D
  tbuffer_store_format_x  v27, v64, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000A84: EBA41000 80001B40
  tbuffer_load_format_x  v6, v65, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000A8C: EBA01000 80000641
  s_waitcnt     vmcnt(0)                                    // 00000A94: BF8C1F70
  v_mac_f32     v33, s13, v6                                // 00000A98: 3E420C0D
  tbuffer_store_format_x  v33, v65, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000A9C: EBA41000 80002141
  tbuffer_load_format_x  v6, v66, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000AA4: EBA01000 80000642
  s_waitcnt     vmcnt(0)                                    // 00000AAC: BF8C1F70
  v_mac_f32     v39, s13, v6                                // 00000AB0: 3E4E0C0D
  tbuffer_store_format_x  v39, v66, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000AB4: EBA41000 80002742
  tbuffer_load_format_x  v6, v67, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000ABC: EBA01000 80000643
  s_waitcnt     vmcnt(0)                                    // 00000AC4: BF8C1F70
  v_mac_f32     v23, s13, v6                                // 00000AC8: 3E2E0C0D
  tbuffer_store_format_x  v23, v67, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000ACC: EBA41000 80001743
  tbuffer_load_format_x  v6, v68, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000AD4: EBA01000 80000644
  s_waitcnt     vmcnt(0)                                    // 00000ADC: BF8C1F70
  v_mac_f32     v17, s13, v6                                // 00000AE0: 3E220C0D
  tbuffer_store_format_x  v17, v68, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000AE4: EBA41000 80001144
  tbuffer_load_format_x  v6, v69, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000AEC: EBA01000 80000645
  s_waitcnt     vmcnt(0)                                    // 00000AF4: BF8C1F70
  v_mac_f32     v11, s13, v6                                // 00000AF8: 3E160C0D
  tbuffer_store_format_x  v11, v69, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000AFC: EBA41000 80000B45
  tbuffer_load_format_x  v6, v70, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000B04: EBA01000 80000646
  s_waitcnt     vmcnt(0)                                    // 00000B0C: BF8C1F70
  v_mac_f32     v5, s13, v6                                 // 00000B10: 3E0A0C0D
  tbuffer_store_format_x  v5, v70, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000B14: EBA41000 80000546
  s_waitcnt     expcnt(0)                                   // 00000B1C: BF8C1F0F
  tbuffer_load_format_x  v5, v71, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000B20: EBA01000 80000547
  s_waitcnt     vmcnt(0)                                    // 00000B28: BF8C1F70
  v_mac_f32     v28, s13, v5                                // 00000B2C: 3E380A0D
  tbuffer_store_format_x  v28, v71, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000B30: EBA41000 80001C47
  tbuffer_load_format_x  v5, v72, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000B38: EBA01000 80000548
  s_waitcnt     vmcnt(0)                                    // 00000B40: BF8C1F70
  v_mac_f32     v34, s13, v5                                // 00000B44: 3E440A0D
  tbuffer_store_format_x  v34, v72, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000B48: EBA41000 80002248
  tbuffer_load_format_x  v5, v73, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000B50: EBA01000 80000549
  s_waitcnt     vmcnt(0)                                    // 00000B58: BF8C1F70
  v_mac_f32     v40, s13, v5                                // 00000B5C: 3E500A0D
  tbuffer_store_format_x  v40, v73, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000B60: EBA41000 80002849
  tbuffer_load_format_x  v5, v74, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000B68: EBA01000 8000054A
  s_waitcnt     vmcnt(0)                                    // 00000B70: BF8C1F70
  v_mac_f32     v22, s13, v5                                // 00000B74: 3E2C0A0D
  tbuffer_store_format_x  v22, v74, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000B78: EBA41000 8000164A
  tbuffer_load_format_x  v5, v75, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000B80: EBA01000 8000054B
  s_waitcnt     vmcnt(0)                                    // 00000B88: BF8C1F70
  v_mac_f32     v16, s13, v5                                // 00000B8C: 3E200A0D
  tbuffer_store_format_x  v16, v75, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000B90: EBA41000 8000104B
  tbuffer_load_format_x  v5, v76, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000B98: EBA01000 8000054C
  s_waitcnt     vmcnt(0)                                    // 00000BA0: BF8C1F70
  v_mac_f32     v10, s13, v5                                // 00000BA4: 3E140A0D
  tbuffer_store_format_x  v10, v76, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000BA8: EBA41000 80000A4C
  tbuffer_load_format_x  v5, v77, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000BB0: EBA01000 8000054D
  s_waitcnt     vmcnt(0)                                    // 00000BB8: BF8C1F70
  v_mac_f32     v4, s13, v5                                 // 00000BBC: 3E080A0D
  tbuffer_store_format_x  v4, v77, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000BC0: EBA41000 8000044D
  s_waitcnt     expcnt(0)                                   // 00000BC8: BF8C1F0F
  tbuffer_load_format_x  v4, v78, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000BCC: EBA01000 8000044E
  s_waitcnt     vmcnt(0)                                    // 00000BD4: BF8C1F70
  v_mac_f32     v29, s13, v4                                // 00000BD8: 3E3A080D
  tbuffer_store_format_x  v29, v78, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000BDC: EBA41000 80001D4E
  tbuffer_load_format_x  v4, v79, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000BE4: EBA01000 8000044F
  s_waitcnt     vmcnt(0)                                    // 00000BEC: BF8C1F70
  v_mac_f32     v35, s13, v4                                // 00000BF0: 3E46080D
  tbuffer_store_format_x  v35, v79, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000BF4: EBA41000 8000234F
  tbuffer_load_format_x  v4, v80, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000BFC: EBA01000 80000450
  s_waitcnt     vmcnt(0)                                    // 00000C04: BF8C1F70
  v_mac_f32     v41, s13, v4                                // 00000C08: 3E52080D
  tbuffer_store_format_x  v41, v80, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000C0C: EBA41000 80002950
  tbuffer_load_format_x  v4, v81, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000C14: EBA01000 80000451
  s_waitcnt     vmcnt(0)                                    // 00000C1C: BF8C1F70
  v_mac_f32     v21, s13, v4                                // 00000C20: 3E2A080D
  tbuffer_store_format_x  v21, v81, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000C24: EBA41000 80001551
  tbuffer_load_format_x  v4, v82, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000C2C: EBA01000 80000452
  s_waitcnt     vmcnt(0)                                    // 00000C34: BF8C1F70
  v_mac_f32     v15, s13, v4                                // 00000C38: 3E1E080D
  tbuffer_store_format_x  v15, v82, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000C3C: EBA41000 80000F52
  tbuffer_load_format_x  v4, v83, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000C44: EBA01000 80000453
  s_waitcnt     vmcnt(0)                                    // 00000C4C: BF8C1F70
  v_mac_f32     v9, s13, v4                                 // 00000C50: 3E12080D
  tbuffer_store_format_x  v9, v83, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000C54: EBA41000 80000953
  tbuffer_load_format_x  v4, v84, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000C5C: EBA01000 80000454
  s_waitcnt     vmcnt(0)                                    // 00000C64: BF8C1F70
  v_mac_f32     v3, s13, v4                                 // 00000C68: 3E06080D
  tbuffer_store_format_x  v3, v84, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000C6C: EBA41000 80000354
  s_waitcnt     expcnt(0)                                   // 00000C74: BF8C1F0F
  tbuffer_load_format_x  v3, v0, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000C78: EBA01000 80000300
  s_waitcnt     vmcnt(0)                                    // 00000C80: BF8C1F70
  v_mac_f32     v30, s13, v3                                // 00000C84: 3E3C060D
  tbuffer_store_format_x  v30, v0, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000C88: EBA41000 80001E00
  tbuffer_load_format_x  v0, v45, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000C90: EBA01000 8000002D
  s_waitcnt     vmcnt(0)                                    // 00000C98: BF8C1F70
  v_mac_f32     v36, s13, v0                                // 00000C9C: 3E48000D
  tbuffer_store_format_x  v36, v45, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000CA0: EBA41000 8000242D
  tbuffer_load_format_x  v0, v47, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000CA8: EBA01000 8000002F
  s_waitcnt     vmcnt(0)                                    // 00000CB0: BF8C1F70
  v_mac_f32     v42, s13, v0                                // 00000CB4: 3E54000D
  tbuffer_store_format_x  v42, v47, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000CB8: EBA41000 80002A2F
  tbuffer_load_format_x  v0, v49, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000CC0: EBA01000 80000031
  s_waitcnt     vmcnt(0)                                    // 00000CC8: BF8C1F70
  v_mac_f32     v20, s13, v0                                // 00000CCC: 3E28000D
  tbuffer_store_format_x  v20, v49, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000CD0: EBA41000 80001431
  tbuffer_load_format_x  v0, v51, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000CD8: EBA01000 80000033
  s_waitcnt     vmcnt(0)                                    // 00000CE0: BF8C1F70
  v_mac_f32     v14, s13, v0                                // 00000CE4: 3E1C000D
  tbuffer_store_format_x  v14, v51, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000CE8: EBA41000 80000E33
  tbuffer_load_format_x  v0, v53, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000CF0: EBA01000 80000035
  s_waitcnt     vmcnt(0)                                    // 00000CF8: BF8C1F70
  v_mac_f32     v8, s13, v0                                 // 00000CFC: 3E10000D
  tbuffer_store_format_x  v8, v53, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000D00: EBA41000 80000835
  tbuffer_load_format_x  v0, v1, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000D08: EBA01000 80000001
  s_waitcnt     vmcnt(0)                                    // 00000D10: BF8C1F70
  v_mac_f32     v2, s13, v0                                 // 00000D14: 3E04000D
  tbuffer_store_format_x  v2, v1, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000D18: EBA41000 80000201
  s_branch      label_034A                                  // 00000D20: BF820001
  s_branch      label_034A                                  // 00000D24: BF820000
label_034A:
  s_endpgm                                                  // 00000D28: BF810000
end

; ----------------- CS Data ------------------------

codeLenInByte        = 3372;Bytes

userElementCount     = 3;
;  userElements[0]    = PTR_UAV_TABLE, 0, s[2:3]
;  userElements[1]    = IMM_CONST_BUFFER, 0, s[4:7]
;  userElements[2]    = IMM_CONST_BUFFER, 1, s[8:11]
extUserElementCount  = 0;
NumVgprs             = 90;
NumSgprs             = 28;
FloatMode            = 192;
IeeeMode             = 0;
ScratchSize          = 0;
; texResourceUsage[0]     = 0x00000000
; texResourceUsage[1]     = 0x00000000
; texResourceUsage[2]     = 0x00000000
; texResourceUsage[3]     = 0x00000000
; texResourceUsage[4]     = 0x00000000
; texResourceUsage[5]     = 0x00000000
; texResourceUsage[6]     = 0x00000000
; texResourceUsage[7]     = 0x00000000
; fetch4ResourceUsage[0]  = 0x00000000
; fetch4ResourceUsage[1]  = 0x00000000
; fetch4ResourceUsage[2]  = 0x00000000
; fetch4ResourceUsage[3]  = 0x00000000
; fetch4ResourceUsage[4]  = 0x00000000
; fetch4ResourceUsage[5]  = 0x00000000
; fetch4ResourceUsage[6]  = 0x00000000
; fetch4ResourceUsage[7]  = 0x00000000
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000000

;COMPUTE_PGM_RSRC2       = 0x001D0998
COMPUTE_PGM_RSRC2:USER_SGPR      = 12
COMPUTE_PGM_RSRC2:TGID_X_EN      = 1
COMPUTE_PGM_RSRC2:TGID_Y_EN      = 1
COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT = 1
COMPUTE_PGM_RSRC2:LDS_SIZE       = 58
